{"version":3,"file":"static/js/788.ca471444.chunk.js","mappings":"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","sources":["app/spotify-app/artist/ArtistInfo.tsx","app/spotify-app/list-options/ArtistListOptions.tsx","util/index.ts","app/partials/input/Input.tsx","app/partials/select/Select.tsx","app/spotify-app/manage/UnfollowArtists.tsx","app/spotify-app/unfollow-all/partials/ArtistList.tsx","app/spotify-app/unfollow-all/UnfollowAll.tsx","app/spotify-app/manage/partials/ArtistsRemove.tsx","app/spotify-app/all-follows/partials/ListLegend.tsx","app/spotify-app/all-follows/partials/ArtistList.tsx","app/spotify-app/all-follows/AllArtistFollows.tsx","app/spotify-app/manage/partials/ArtistsSelect.tsx"],"sourcesContent":["import \"./ArtistInfo.css\";\n\nimport classNames from \"classnames\";\nimport React from \"react\";\n\nimport { Artist } from \"../../../client/spotify/model\";\nimport DefaultImage from \"./default.png\";\nimport SpotifyLogo from \"./spotify-logo.png\";\n\nexport enum ArtistStatus {\n  SELECTED = \"selected\",\n  SUCCEEEDED = \"succeeded\",\n  FAILED = \"failed\",\n}\n\ninterface ArtistProps {\n  artist: Artist;\n  description?: string;\n  status?: ArtistStatus;\n  onClick?: () => void;\n}\n\nconst ArtistInfo = ({ artist, status, onClick, description }: ArtistProps): JSX.Element => (\n  <div\n    className={classNames(\"artist\", status, { clickable: !!onClick })}\n    onClick={(e) => {\n      if (\n        (e.target as any).classList.contains(\"artist-link\") ||\n        (e.target as any).classList.contains(\"spotify-link-logo\")\n      ) {\n        return;\n      }\n      return onClick?.();\n    }}\n  >\n    <div className=\"avatar\">\n      <img src={artist.images[0]?.url ?? DefaultImage} alt={`Artist ${artist.name}`} />\n    </div>\n    <h3 className=\"name\">{artist.name}</h3>\n    <a className=\"artist-link\" href={artist.external_urls.spotify} target=\"_blank\" rel=\"noopener noreferrer\">\n      View on <img className=\"spotify-link-logo\" src={SpotifyLogo} alt=\"Spotify Logo\" />\n    </a>\n    {description && <div className=\"description\">{description}</div>}\n  </div>\n);\n\nexport default ArtistInfo;\n","import \"./ArtistListOptions.css\";\n\nimport React from \"react\";\n\nimport { isNullOrUndefined } from \"../../../util\";\nimport Input from \"../../partials/input/Input\";\nimport Select from \"../../partials/select/Select\";\n\nexport enum ArtistViewSize {\n  FIFTY = 50,\n  TWENTY_FIVE = 25,\n  TEN = 10,\n}\n\nconst VIEW_OPTIONS = [\n  { label: ArtistViewSize.TEN, id: ArtistViewSize.TEN },\n  { label: ArtistViewSize.TWENTY_FIVE, id: ArtistViewSize.TWENTY_FIVE },\n  { label: ArtistViewSize.FIFTY, id: ArtistViewSize.FIFTY },\n];\n\ninterface ArtistListProps {\n  viewSize?: ArtistViewSize;\n  setViewSize?: (size: ArtistViewSize) => void;\n  filterString?: string;\n  setFilterString?: (filterString: string) => void;\n}\n\nconst ArtistList = ({ viewSize, setViewSize, filterString, setFilterString }: ArtistListProps): JSX.Element => (\n  <div className=\"artist-list-options\">\n    <h2>View options</h2>\n    {!isNullOrUndefined(filterString) && setFilterString && (\n      <div className=\"filter-option\">\n        <label>Search artists:</label>\n        <Input value={filterString} onChange={setFilterString} />\n      </div>\n    )}\n    {!isNullOrUndefined(viewSize) && setViewSize && (\n      <div className=\"view-option\">\n        <label>Artists per page:</label>\n        <Select value={viewSize} onChange={setViewSize} options={VIEW_OPTIONS} />\n      </div>\n    )}\n    <button\n      className=\"warning\"\n      onClick={() => {\n        setFilterString?.(\"\");\n        setViewSize?.(ArtistViewSize.TEN);\n      }}\n    >\n      Reset\n    </button>\n  </div>\n);\n\nexport default ArtistList;\n","export const isNullOrUndefined = (value: unknown): value is null | undefined => value === null || value === undefined;\n","import \"./Input.css\";\n\nimport React from \"react\";\n\ninterface InputProps {\n  value: string;\n  placeholder?: string;\n  onChange: (id: string) => void;\n}\n\nconst Input = ({ value, placeholder, onChange }: InputProps): JSX.Element => (\n  <input type=\"text\" placeholder={placeholder} value={value} onChange={(e) => onChange(e.target.value)} />\n);\n\nexport default Input;\n","import React from \"react\";\nimport ReactSelect from \"react-select\";\n\nimport { isNullOrUndefined } from \"../../../util\";\n\ninterface SelectOption<K, V> {\n  id: K;\n  label: V;\n}\n\nconst isOption = <K, V>(option: unknown): option is SelectOption<K, V> =>\n  typeof option === \"object\" && !isNullOrUndefined(option) && \"id\" in option && \"label\" in option;\n\ninterface SelectProps<K, V> {\n  options: SelectOption<K, V>[];\n  value: K;\n  onChange: (id: K) => void;\n}\n\nconst Select = <K, V>({ options, value, onChange }: SelectProps<K, V>): JSX.Element => (\n  <ReactSelect\n    styles={{\n      option: (provided, state) => ({\n        ...provided,\n        background: state.isFocused ? \"#282828\" : \"#121212\",\n        color: \"#d8f3e0\",\n      }),\n      control: (provided) => ({\n        ...provided,\n        border: \"1px solid #d8f3e0\",\n        background: \"#121212\",\n        borderRadius: \"0\",\n      }),\n      menu: (provided) => ({\n        ...provided,\n        background: \"#121212\",\n        border: \"1px solid #d8f3e0\",\n      }),\n      singleValue: (provided) => ({\n        ...provided,\n        color: \"#d8f3e0\",\n      }),\n      valueContainer: (provided) => ({\n        ...provided,\n      }),\n    }}\n    captureMenuScroll={false}\n    value={options.find((option) => option.id === value)}\n    onChange={(option) => isOption(option) && onChange(option.id)}\n    options={options}\n  />\n);\n\nexport default Select;\n","import \"./UnfollowArtists.css\";\n\nimport React, { useCallback, useState } from \"react\";\n\nimport { Artist } from \"../../../client/spotify/model\";\nimport ArtistsRemove from \"./partials/ArtistsRemove\";\nimport ArtistsSelect from \"./partials/ArtistsSelect\";\n\n// import Loading from \"../../partials/loading/Loading\";\nenum UnfollowArtistsView {\n  ARTIST_SELECT = \"artist-select\",\n  ARTIST_REMOVE = \"artist-remove\",\n}\n\nconst UnfollowArtists = (): JSX.Element => {\n  const [view, setView] = useState(UnfollowArtistsView.ARTIST_SELECT);\n  const [artistsToRemove, setArtistsToRemove] = useState(new Set<Artist>());\n\n  const addArtists = useCallback(\n    (...artistsToAdd: Artist[]) =>\n      setArtistsToRemove((artists) => {\n        artistsToAdd.forEach((artist) => artists.add(artist));\n        return new Set(artists);\n      }),\n    [],\n  );\n  const removeArtists = useCallback(\n    (...artistsToRemove: Artist[]) =>\n      setArtistsToRemove((artists) => {\n        artistsToRemove.forEach((artist) => artists.delete(artist));\n        return new Set(artists);\n      }),\n    [],\n  );\n\n  return (\n    <div className=\"unfollow-artists\">\n      {view === UnfollowArtistsView.ARTIST_SELECT ? (\n        <ArtistsSelect\n          selectedArtists={Array.from(artistsToRemove.values())}\n          addArtists={addArtists}\n          removeArtists={removeArtists}\n          startUnfollow={() => setView(UnfollowArtistsView.ARTIST_REMOVE)}\n        />\n      ) : (\n        <ArtistsRemove\n          artists={Array.from(artistsToRemove.values())}\n          restartUnfollow={() => {\n            setArtistsToRemove(new Set());\n            setView(UnfollowArtistsView.ARTIST_SELECT);\n          }}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default UnfollowArtists;\n","import \"./ArtistList.css\";\n\nimport React, { useEffect, useState } from \"react\";\n\nimport { Artist } from \"../../../../client/spotify/model\";\nimport Loading from \"../../../partials/loading/Loading\";\nimport ArtistInfo, { ArtistStatus } from \"../../artist/ArtistInfo\";\nimport ArtistListOptions, { ArtistViewSize } from \"../../list-options/ArtistListOptions\";\n\ninterface ArtistWithStatus extends Artist {\n  status: ArtistStatus;\n}\n\nexport interface ArtistWithError extends Artist {\n  error?: Error;\n}\n\ninterface ArtistListProps {\n  artists: (ArtistWithStatus & ArtistWithError)[];\n  unfollowing: boolean;\n  completed: boolean;\n  header: JSX.Element;\n}\n\nconst ArtistList = ({ artists, unfollowing, completed, header }: ArtistListProps): JSX.Element => {\n  const [viewSize, setViewSize] = useState(ArtistViewSize.TEN);\n  const [pageIndex, setPageIndex] = useState(0);\n\n  useEffect(() => {\n    setPageIndex(0);\n  }, [viewSize]);\n\n  useEffect(() => {\n    if (!completed) {\n      return;\n    }\n\n    setPageIndex(0);\n  }, [completed]);\n\n  const failedArtists = artists.filter((artist) => artist.status === ArtistStatus.FAILED);\n\n  const artistsToShow = completed && failedArtists.length > 0 ? failedArtists : artists;\n\n  return (\n    <div className=\"unfollow-artists-list\">\n      <div className=\"results-table\">\n        <div className=\"results-table-options\">\n          <ArtistListOptions {...{ viewSize, setViewSize }} />\n        </div>\n        <div className=\"results-view\">\n          {header}\n          {unfollowing && <Loading />}\n          <div className=\"artist-list\">\n            {artistsToShow.slice(pageIndex * viewSize, (pageIndex + 1) * viewSize).map((artist) => (\n              <ArtistInfo\n                key={artist.id}\n                status={artist.status}\n                artist={artist}\n                description={artist.error ? `Could not unfollow. Error: ${artist.error.message}` : undefined}\n              />\n            ))}\n          </div>\n          <div className=\"pagination\">\n            <button\n              className=\"previous\"\n              onClick={() => setPageIndex((pageIndex) => pageIndex - 1)}\n              disabled={pageIndex === 0}\n            >\n              Previous\n            </button>\n            <button\n              className=\"next\"\n              onClick={() => setPageIndex((pageIndex) => pageIndex + 1)}\n              disabled={(pageIndex + 1) * viewSize >= artists.length - 1}\n            >\n              Next\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ArtistList;\n","import \"./UnfollowAll.css\";\n\nimport React, { useEffect, useState } from \"react\";\n\nimport { useUnfollowArtistsChunked } from \"../../../client/spotify\";\nimport { Artist } from \"../../../client/spotify/model\";\nimport { ArtistStatus } from \"../artist/ArtistInfo\";\nimport ArtistList, { ArtistWithError } from \"./partials/ArtistList\";\n\ninterface UnfollowAllProps {\n  artists: Artist[];\n  onComplete: () => void;\n}\n\nconst getInProgressArtist = (artist: Artist) => ({\n  ...artist,\n  status: ArtistStatus.SELECTED,\n});\nconst getSucceededArtist = (artist: Artist) => ({\n  ...artist,\n  status: ArtistStatus.SUCCEEEDED,\n});\nconst getFailedArtist = (artist: ArtistWithError) => ({\n  ...artist,\n  status: ArtistStatus.FAILED,\n});\n\nconst UnfollowAll = ({ artists, onComplete }: UnfollowAllProps) => {\n  const [resultsChunked, loading, error] = useUnfollowArtistsChunked(artists);\n  const [failedArtists, setFailedArtists] = useState<ArtistWithError[]>([]);\n  const [succeededArtists, setSucceededArtists] = useState<Artist[]>([]);\n\n  useEffect(() => {\n    setFailedArtists(\n      resultsChunked\n        .map((results) =>\n          results.failedArtists.map((artist) => ({\n            ...artist,\n            error: results.error,\n          })),\n        )\n        .flat(),\n    );\n    setSucceededArtists(resultsChunked.map((results) => results.succeededArtists).flat());\n  }, [resultsChunked]);\n\n  useEffect(() => {\n    const totalAttemptedArtists = failedArtists.length + succeededArtists.length;\n    if (!error && !loading && !!resultsChunked && totalAttemptedArtists === artists.length) {\n      onComplete();\n    }\n  }, [error, loading, resultsChunked, onComplete, failedArtists, succeededArtists, artists]);\n  return (\n    <div className=\"unfollow-all-list\">\n      <ArtistList\n        artists={[\n          ...artists\n            .filter((artist) => !failedArtists.find((failedArtist) => failedArtist.id === artist.id))\n            .filter((artist) => succeededArtists.indexOf(artist) === -1)\n            .map(getInProgressArtist),\n          ...failedArtists.map(getFailedArtist),\n          ...succeededArtists.map(getSucceededArtist),\n        ]}\n        unfollowing={!error && loading}\n        completed={!error && !loading && !!resultsChunked}\n        header={\n          <>\n            {error && <div className=\"error loading-message\">Error unfollowing artists: {error.message}</div>}\n            {!error && loading && <div className=\"warning loading-message\">Unfollowing artists</div>}\n            {!error && !loading && resultsChunked.length > 0 && failedArtists.length === 0 && (\n              <div className=\"success loading-message\">Unfollowed all artists!</div>\n            )}\n            {!error && !loading && resultsChunked.length > 0 && failedArtists.length > 0 && (\n              <div className=\"error loading-message\">Could not unfollow some artists! Failed artists listed below</div>\n            )}\n          </>\n        }\n      />\n    </div>\n  );\n};\n\nexport default UnfollowAll;\n","import \"./ArtistsRemove.css\";\n\nimport React, { useState } from \"react\";\n\nimport { Artist } from \"../../../../client/spotify/model\";\nimport UnfollowAll from \"../../unfollow-all/UnfollowAll\";\n\ninterface ArtistsRemoveProps {\n  artists: Artist[];\n  restartUnfollow: () => void;\n}\n\nconst ArtistsRemove = ({ artists, restartUnfollow }: ArtistsRemoveProps): JSX.Element => {\n  const [allowRestart, setAllowRestart] = useState(false);\n\n  return (\n    <div className=\"artists-remove\">\n      <UnfollowAll artists={artists} onComplete={() => setAllowRestart(true)} />\n      {allowRestart && (\n        <div className=\"restart-unfollow\">\n          <button className=\"info\" disabled={!allowRestart} onClick={restartUnfollow}>\n            Unfollow more artists\n          </button>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default ArtistsRemove;\n","import \"./ListLegend.css\";\n\nimport React from \"react\";\n\nconst ListLegend = (): JSX.Element => (\n  <div className=\"list-legend\">\n    <div className=\"item normal\">\n      <div className=\"color\"></div>\n      <div className=\"text\">Not Selected</div>\n    </div>\n    <div className=\"item selected\">\n      <div className=\"color\"></div>\n      <div className=\"text\">Selected</div>\n    </div>\n  </div>\n);\n\nexport default ListLegend;\n","import \"./ArtistList.css\";\n\nimport React, { useEffect, useState } from \"react\";\n\nimport { Artist } from \"../../../../client/spotify/model\";\nimport Loading from \"../../../partials/loading/Loading\";\nimport ArtistInfo, { ArtistStatus } from \"../../artist/ArtistInfo\";\nimport ArtistListOptions, { ArtistViewSize } from \"../../list-options/ArtistListOptions\";\nimport ListLegend from \"./ListLegend\";\n\ninterface ArtistListProps {\n  artists: Artist[];\n  selectedArtists: Artist[];\n  loadingResults: boolean;\n  addArtist: (artistToAdd: Artist) => void;\n  removeArtist: (artistToRemove: Artist) => void;\n}\n\nconst ArtistList = ({\n  artists,\n  selectedArtists,\n  loadingResults,\n  addArtist,\n  removeArtist,\n}: ArtistListProps): JSX.Element => {\n  const [viewSize, setViewSize] = useState(ArtistViewSize.TEN);\n  const [filterString, setFilterString] = useState(\"\");\n  const [pageIndex, setPageIndex] = useState(0);\n\n  useEffect(() => {\n    setPageIndex(0);\n  }, [viewSize, filterString]);\n\n  const filterStringLc = filterString.toLowerCase();\n\n  return (\n    <div className=\"all-follows-list\">\n      <div className=\"results-table\">\n        <div className=\"results-table-options\">\n          <ArtistListOptions {...{ viewSize, setViewSize, filterString, setFilterString }} />\n        </div>\n        <div className=\"results-view\">\n          <h2 className=\"list-title\">Select artists to unfollow</h2>\n          <ListLegend />\n          <div className=\"artist-list\">\n            {artists\n              .filter((artist) => filterStringLc === \"\" || artist.name.toLowerCase().includes(filterStringLc))\n              .slice(pageIndex * viewSize, (pageIndex + 1) * viewSize)\n              .map((artist) => {\n                const isSelected = selectedArtists.indexOf(artist) !== -1;\n                return (\n                  <ArtistInfo\n                    key={artist.id}\n                    status={isSelected ? ArtistStatus.SELECTED : undefined}\n                    artist={artist}\n                    onClick={() => (isSelected ? removeArtist(artist) : addArtist(artist))}\n                  />\n                );\n              })}\n          </div>\n          {loadingResults && <Loading />}\n          <div className=\"pagination\">\n            <button\n              className=\"previous\"\n              onClick={() => setPageIndex((pageIndex) => pageIndex - 1)}\n              disabled={pageIndex === 0}\n            >\n              Previous\n            </button>\n            <button\n              className=\"next\"\n              onClick={() => setPageIndex((pageIndex) => pageIndex + 1)}\n              disabled={(pageIndex + 1) * viewSize >= artists.length - 1}\n            >\n              Next\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ArtistList;\n","import \"./AllArtistFollows.css\";\n\nimport React, { useEffect, useState } from \"react\";\n\nimport { useGetAllUserArtistFollows } from \"../../../client/spotify\";\nimport { Artist } from \"../../../client/spotify/model\";\nimport Loading from \"../../partials/loading/Loading\";\nimport ArtistList from \"./partials/ArtistList\";\n\ninterface AllArtistFollowsProps {\n  selectedArtists: Artist[];\n  addArtistsForRemoval: (...artists: Artist[]) => void;\n  removeArtistsForRemoval: (...artists: Artist[]) => void;\n}\n\nconst AllArtistFollows = ({\n  selectedArtists,\n  addArtistsForRemoval,\n  removeArtistsForRemoval,\n}: AllArtistFollowsProps): JSX.Element => {\n  const [artistsResult, loading, error] = useGetAllUserArtistFollows();\n  const [artists, setArtists] = useState<Artist[]>([]);\n\n  const addArtistToRemovalList = (artist: Artist) => {\n    addArtistsForRemoval(artist);\n  };\n  const removeArtistFromRemovalList = (artist: Artist) => {\n    removeArtistsForRemoval(artist);\n  };\n\n  useEffect(() => {\n    if (artistsResult.length === 0) {\n      return;\n    }\n\n    const newArtists = artistsResult[artistsResult.length - 1];\n\n    setArtists((artists) => [...artists, ...newArtists]);\n\n    addArtistsForRemoval(...newArtists);\n  }, [addArtistsForRemoval, artistsResult]);\n\n  return (\n    <div className=\"all-artist-follows\">\n      {error && <div className=\"error loading-message\">Error retrieving followed artists: {error.message}</div>}\n      {!error && loading && <div className=\"warning loading-message\">Retrieving followed artists</div>}\n      {!error && loading && artists.length === 0 && <Loading />}\n      {!error && !loading && artists.length === 0 && (\n        <div className=\"error loading-message\">No followed artists found</div>\n      )}\n      {!error && artists.length > 0 && (\n        <ArtistList\n          loadingResults={!error && loading}\n          artists={artists}\n          selectedArtists={selectedArtists}\n          addArtist={addArtistToRemovalList}\n          removeArtist={removeArtistFromRemovalList}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default AllArtistFollows;\n","import \"./ArtistsSelect.css\";\n\nimport classNames from \"classnames\";\nimport React from \"react\";\n\nimport { Artist } from \"../../../../client/spotify/model\";\nimport AllArtistFollows from \"../../all-follows/AllArtistFollows\";\n\ninterface ArtistsSelectProps {\n  selectedArtists: Artist[];\n  addArtists: (...artists: Artist[]) => void;\n  removeArtists: (...artists: Artist[]) => void;\n  startUnfollow: () => void;\n}\n\nconst ArtistsSelect = ({\n  selectedArtists,\n  addArtists,\n  removeArtists,\n  startUnfollow,\n}: ArtistsSelectProps): JSX.Element => (\n  <div className=\"artists-select\">\n    <AllArtistFollows\n      selectedArtists={selectedArtists}\n      addArtistsForRemoval={addArtists}\n      removeArtistsForRemoval={removeArtists}\n    />\n    <div className=\"start-unfollow\">\n      <button\n        className={classNames(\"error\", {\n          disabled: selectedArtists.length === 0,\n        })}\n        disabled={selectedArtists.length === 0}\n        onClick={startUnfollow}\n      >\n        Unfollow {selectedArtists.length} artists\n      </button>\n    </div>\n  </div>\n);\n\nexport default ArtistsSelect;\n"],"names":["ArtistStatus","ArtistViewSize","artist","status","onClick","description","className","classNames","clickable","e","target","classList","contains","src","images","url","DefaultImage","alt","name","href","external_urls","spotify","rel","SpotifyLogo","isNullOrUndefined","value","undefined","placeholder","onChange","type","options","styles","option","provided","state","background","isFocused","color","control","border","borderRadius","menu","singleValue","valueContainer","captureMenuScroll","find","id","isOption","UnfollowArtistsView","VIEW_OPTIONS","label","TEN","TWENTY_FIVE","FIFTY","viewSize","setViewSize","filterString","setFilterString","artists","unfollowing","completed","header","useState","pageIndex","setPageIndex","useEffect","failedArtists","filter","FAILED","artistsToShow","length","Loading","slice","map","error","message","disabled","getInProgressArtist","SELECTED","getSucceededArtist","SUCCEEEDED","getFailedArtist","onComplete","useUnfollowArtistsChunked","resultsChunked","loading","setFailedArtists","succeededArtists","setSucceededArtists","results","flat","totalAttemptedArtists","failedArtist","indexOf","restartUnfollow","allowRestart","setAllowRestart","selectedArtists","loadingResults","addArtist","removeArtist","filterStringLc","toLowerCase","includes","isSelected","addArtistsForRemoval","removeArtistsForRemoval","useGetAllUserArtistFollows","artistsResult","setArtists","newArtists","addArtists","removeArtists","startUnfollow","ARTIST_SELECT","view","setView","Set","artistsToRemove","setArtistsToRemove","useCallback","artistsToAdd","forEach","add","delete","Array","from","values","ARTIST_REMOVE"],"sourceRoot":""}