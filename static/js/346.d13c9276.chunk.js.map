{"version":3,"file":"static/js/346.d13c9276.chunk.js","mappings":"8LAWYA,E,iNCiCZ,EA1BmB,SAAC,GAAD,QAAGC,EAAH,EAAGA,OAAQC,EAAX,EAAWA,OAAQC,EAAnB,EAAmBA,QAASC,EAA5B,EAA4BA,YAA5B,OACjB,iBACEC,UAAWC,IAAW,SAAUJ,EAAQ,CAAEK,YAAaJ,IACvDA,QAAS,SAACK,GACR,IACGA,EAAEC,OAAeC,UAAUC,SAAS,iBACpCH,EAAEC,OAAeC,UAAUC,SAAS,qBAIvC,cAAOR,QAAP,IAAOA,OAAP,EAAOA,GACR,EAVH,WAYE,gBAAKE,UAAU,SAAf,UACE,gBAAKO,IAAG,oBAAEX,EAAOY,OAAO,UAAhB,aAAE,EAAkBC,WAApB,QAA2BC,EAAcC,IAAG,UAAKf,EAAOgB,KAAZ,gBAEtD,gBAAIZ,UAAU,OAAd,UACGJ,EAAOgB,KADV,KACkBC,EAAAA,GAAsBjB,EAAOkB,MAD/C,QAGA,eAAGd,UAAU,cAAce,KAAMnB,EAAOoB,cAAcC,QAASb,OAAO,SAASc,IAAI,sBAAnF,sBACU,gBAAKlB,UAAU,oBAAoBO,IAAKY,EAAaR,IAAI,oBAElEZ,IAAe,gBAAKC,UAAU,cAAf,SAA8BD,MAtB/B,ECJnB,EAJc,SAAC,GAAD,IAAGqB,EAAH,EAAGA,MAAOC,EAAV,EAAUA,YAAaC,EAAvB,EAAuBA,SAAvB,OACZ,kBAAOR,KAAK,OAAOO,YAAaA,EAAaD,MAAOA,EAAOE,SAAU,SAACnB,GAAD,OAAOmB,EAASnB,EAAEC,OAAOgB,MAAzB,GADzD,E,oBC6Cd,EAnCe,gBAASG,EAAT,EAASA,QAASH,EAAlB,EAAkBA,MAAlB,IAAyBI,SAAAA,OAAzB,SAA2CF,EAA3C,EAA2CA,SAA3C,OACb,SAAC,KAAD,CACEG,OAAQ,CACNC,OAAQ,SAACC,EAAUC,GAAX,eAAC,UACJD,GADG,IAENE,WAAYD,EAAME,UAAY,UAAY,UAC1CC,MAAO,WAHD,EAKRC,QAAS,SAACL,GAAD,eAAC,UACLA,GADI,IAEPM,OAAQ,oBACRJ,WAAY,UACZK,aAAc,KAJP,EAMTC,KAAM,SAACR,GAAD,eAAC,UACFA,GADC,IAEJE,WAAY,UACZI,OAAQ,qBAHJ,EAKNG,YAAa,SAACT,GAAD,eAAC,UACTA,GADQ,IAEXI,MAAO,WAFI,EAIbM,eAAgB,SAACV,GAAD,iBACXA,EADW,GAIlBW,mBAAmB,EACnBC,WAAYf,EACZJ,MAAOG,EAAQiB,MAAK,SAACd,GAAD,OAAYA,EAAOe,KAAOrB,CAA1B,IACpBE,SAAU,SAACI,GAAD,OAxCG,SAAOA,GAAP,MACG,kBAAXA,KAAwBgB,EAAAA,EAAAA,GAAkBhB,IAAW,OAAQA,GAAU,UAAWA,CAD1E,CAwCSiB,CAASjB,KAAT,OAAoBJ,QAApB,IAAoBA,OAApB,EAAoBA,EAAWI,EAAOe,IAAlD,EACVlB,QAASA,GA/BE,E,oBHTf,SAAY5B,GAAAA,EAAAA,EAAAA,MAAAA,IAAAA,QAAAA,EAAAA,EAAAA,YAAAA,IAAAA,cAAAA,EAAAA,EAAAA,IAAAA,IAAAA,KAAAA,CAAZ,CAAYA,IAAAA,EAAAA,CAAAA,IAMZ,IIPKiD,EJOCC,EAAe,CACnB,CAAEC,MAAOnD,EAASoD,IAAKN,GAAI9C,EAASoD,KACpC,CAAED,MAAOnD,EAASqD,YAAaP,GAAI9C,EAASqD,aAC5C,CAAEF,MAAOnD,EAASsD,MAAOR,GAAI9C,EAASsD,QAiExC,EArD0B,SAAC,GAOiB,IAN1CC,EAMyC,EANzCA,YACAC,EAKyC,EALzCA,eACAC,EAIyC,EAJzCA,SACAC,EAGyC,EAHzCA,YACAC,EAEyC,EAFzCA,aACAC,EACyC,EADzCA,gBAEQC,GAAgBC,EAAAA,EAAAA,YAAWC,EAAAA,GAA3BF,YAER,OACE,iBAAKxD,UAAU,sBAAf,WACE,qCACA,gBAAKA,UAAU,cAAf,SACG2D,EAAAA,GAAAA,QAA0B,gBAAGC,EAAH,EAAGA,WAAH,OAAoBJ,EAAYK,IAAID,EAApC,IAAiDE,KAAI,SAACpC,GAAD,OAC9E,8BACE,SAACqC,EAAA,EAAD,CACEC,QAASd,EAAYe,SAASvC,EAAOe,IACrCjB,SAAU0B,EAAYe,SAASvC,EAAOe,KAA8B,IAAvBS,EAAYgB,OACzD5C,SAAU,SAAC6C,GAAD,OACRA,EAAS,OACLhB,QADK,IACLA,OADK,EACLA,EAAc,WAAd,UAAoB,IAAIiB,IAAJ,kBAAYlB,GAAZ,CAAyBxB,EAAOe,QAD/C,OAELU,QAFK,IAELA,OAFK,EAELA,EAAc,WAAd,UAAoB,IAAIiB,IAAIlB,EAAYmB,QAAO,SAACvD,GAAD,OAAUA,IAASY,EAAOe,EAA1B,MAH3C,KAMZ,0BAAOf,EAAOoB,UAVJpB,EAAOe,GAD2D,OAelF,mBACEC,EAAAA,EAAAA,GAAkBY,KAAkBZ,EAAAA,EAAAA,GAAkBa,GAKpD,MAJF,iBAAKvD,UAAU,gBAAf,WACE,wCACA,SAAC,EAAD,CAAOoB,MAAOkC,EAAchC,SAAUiC,QAG1C,iBAAKvD,UAAU,cAAf,WACE,kDACA,SAAC,EAAD,CAAQoB,MAAOgC,EAAU9B,SAAU+B,EAAa9B,QAASsB,QAE3D,mBACE7C,UAAU,UACVF,QAAS,WACQ,OAAfyD,QAAe,IAAfA,GAAAA,EAAkB,IAClBF,EAAY1D,EAASoD,IACtB,EALH,qBAWL,EKWD,EA/DmB,SAAC,GAA4F,IAA1FG,EAAyF,EAAzFA,YAAaoB,EAA4E,EAA5EA,QAASC,EAAmE,EAAnEA,YAAaC,EAAsD,EAAtDA,UAAWC,EAA2C,EAA3CA,OAClE,GAAgCC,EAAAA,EAAAA,UAAS/E,EAASoD,KAAlD,eAAOK,EAAP,KAAiBC,EAAjB,KACA,GAAkCqB,EAAAA,EAAAA,UAAS,GAA3C,eAAOC,EAAP,KAAkBC,EAAlB,MAEAC,EAAAA,EAAAA,YAAU,WACRD,EAAa,EACd,GAAE,CAACxB,KAEJyB,EAAAA,EAAAA,YAAU,WACHL,GAILI,EAAa,EACd,GAAE,CAACJ,IAEJ,IAAMM,EAAgBR,EAAQD,QAAO,SAACzE,GAAD,MAA8B,WAAlBA,EAAOC,MAAnB,IAE/BkF,EAAgBP,GAAaM,EAAcZ,OAAS,EAAIY,EAAgBR,EAE9E,OACE,gBAAKtE,UAAU,wBAAf,UACE,iBAAKA,UAAU,gBAAf,WACE,gBAAKA,UAAU,wBAAf,UACE,SAAC,EAAD,CAAyBkD,YAAAA,EAAaE,SAAAA,EAAUC,YAAAA,OAElD,iBAAKrD,UAAU,eAAf,UACGyE,EACAF,IAAe,SAACS,EAAA,EAAD,KAChB,gBAAKhF,UAAU,cAAf,SACG+E,EAAcE,MAAMN,EAAYvB,GAAWuB,EAAY,GAAKvB,GAAUU,KAAI,SAACoB,GAAD,OACzE,SAAC,EAAD,CAEErF,OAAQqF,EAAQrF,OAChBD,OAAQsF,EAAQtF,OAChBG,aA9CWH,EA+CSsF,EA9ChB,WAAlBtF,EAAOC,OA8CS,qCAA2DqF,EAAQC,MAAMC,cAAYC,IAJlFH,EAAQtF,OAAO6C,IA3CV,IAAC7C,CAyC4D,OAW7E,iBAAKI,UAAU,aAAf,WACE,mBACEA,UAAU,WACVF,QAAS,kBAAM8E,GAAa,SAACD,GAAD,OAAeA,EAAY,CAA3B,GAAnB,EACTnD,SAAwB,IAAdmD,EAHZ,uBAOA,mBACE3E,UAAU,OACVF,QAAS,kBAAM8E,GAAa,SAACD,GAAD,OAAeA,EAAY,CAA3B,GAAnB,EACTnD,UAAWmD,EAAY,GAAKvB,GAAYkB,EAAQJ,OAAS,EAH3D,4BAYX,ECnEKoB,EAAsB,SAAC1F,GAAD,MAAqB,CAC/CA,OAAAA,EACAC,OAAQ,WAFkB,EAItB0F,EAAqB,SAAC3F,GAAD,MAAqB,CAC9CA,OAAAA,EACAC,OAAQ,YAFiB,EAIrB2F,EAAkB,SAAC5F,GAAD,eAAC,UACpBA,GADmB,IAEtBC,OAAQ,UAFc,EAiFxB,EA5EoB,SAAC,GAA4D,IAA1DqD,EAAyD,EAAzDA,YAAaoB,EAA4C,EAA5CA,QAASmB,EAAmC,EAAnCA,WAC3C,GAA0Cf,EAAAA,EAAAA,UAA4B,IAAtE,eAAOI,EAAP,KAAsBY,EAAtB,KACA,GAAgDhB,EAAAA,EAAAA,UAAmB,IAAnE,eAAOiB,EAAP,KAAyBC,EAAzB,KAEMC,GAAsBC,EAAAA,EAAAA,cAC1B,SAACC,IACKC,EAAAA,EAAAA,IAAuBD,GACzBH,GAAoB,SAACD,GAAD,wBAA0BA,IAA1B,OAA+CI,EAAaE,WAA5D,IAEpBP,GAAiB,SAACZ,GAAD,wBACZA,IADY,OAEZiB,EAAaG,OAAOpC,KAAI,SAAClE,GAAD,MAAa,CAAEA,OAAAA,EAAQuF,MAAOY,EAAaZ,MAA3C,KAFZ,GAKpB,GACD,CAACS,EAAqBF,IAGxB,GAA0CS,EAAAA,EAAAA,IAA0B7B,EAASuB,GAA7E,eAAOO,EAAP,KAAuBC,EAAvB,KAAgCC,EAAhC,KASA,OAPAzB,EAAAA,EAAAA,YAAU,WACR,IAAM0B,EAAwBzB,EAAcZ,OAASyB,EAAiBzB,OAChD,IAAlBoC,EAAOpC,SAAiBmC,GAAaD,GAAkBG,IAA0BjC,EAAQJ,QAC3FuB,GAEH,GAAE,CAACa,EAAQD,EAASD,EAAgBX,EAAYX,EAAea,EAAkBrB,KAGhF,gBAAKtE,UAAU,oBAAf,UACE,SAAC,EAAD,CACEkD,YAAaA,EACboB,QAAO,kBACFQ,EAAchB,IAAI0B,KADhB,OAEFlB,EACAD,QAAO,SAACmC,GAAD,OAAa1B,EAActC,MAAK,SAACiE,GAAD,OAAkBA,EAAa7G,OAAO6C,KAAO+D,EAAO/D,EAApD,GAAhC,IACP4B,QAAO,SAACmC,GAAD,OAAkD,IAAtCb,EAAiBe,QAAQF,EAArC,IACP1C,IAAIwB,KALF,OAMFK,EAAiB7B,IAAIyB,KAE1BhB,YAA+B,IAAlB+B,EAAOpC,QAAgBmC,EACpC7B,UAA6B,IAAlB8B,EAAOpC,SAAiBmC,KAAaD,EAChD3B,QACE,gCACG6B,EAAOpC,OAAS,IACf,iBAAKlE,UAAU,wBAAf,+BACqB2G,EAAAA,GAAAA,WAAA,GAAkBC,EAAAA,IAAlB,eAA2C1D,KADhE,KAEE,wBACGoD,EAAOxC,KAAI,SAACqB,EAAO0B,GAAR,OACV,wBAAa1B,EAAMC,SAAVyB,EADC,SAMC,IAAlBP,EAAOpC,QAAgBmC,IACtB,iBAAKrG,UAAU,0BAAf,yBACe2G,EAAAA,GAAAA,WAAA,GAAkBC,EAAAA,IAAlB,eAA2C1D,QAGzC,IAAlBoD,EAAOpC,SAAiBmC,GAAWD,EAAelC,OAAS,GAA8B,IAAzBY,EAAcZ,SAC7E,iBAAKlE,UAAU,0BAAf,4BACkB2G,EAAAA,GAAAA,WAAA,GAAkBC,EAAAA,IAAlB,eAA2C1D,KAD7D,OAIiB,IAAlBoD,EAAOpC,SAAiBmC,GAAWD,EAAelC,OAAS,GAAKY,EAAcZ,OAAS,IACtF,iBAAKlE,UAAU,wBAAf,qCAC2B2G,EAAAA,GAAAA,WAAA,GAAkBC,EAAAA,IAAlB,eAA2C1D,KADtE,WAC4F,IACzFyD,EAAAA,GAAAA,WAAA,GAAkBC,EAAAA,IAAlB,eAA2C1D,KAF9C,yBAUb,EClFD,EAjBsB,SAAC,GAAgF,IAA9EA,EAA6E,EAA7EA,YAAaoB,EAAgE,EAAhEA,QAASwC,EAAuD,EAAvDA,gBAC7C,GAAwCpC,EAAAA,EAAAA,WAAS,GAAjD,eAAOqC,EAAP,KAAqBC,EAArB,KAEA,OACE,iBAAKhH,UAAU,iBAAf,WACE,SAAC,EAAD,CAAakD,YAAaA,EAAaoB,QAASA,EAASmB,WAAY,kBAAMuB,GAAgB,EAAtB,IACpED,IACC,gBAAK/G,UAAU,mBAAf,UACE,mBAAQA,UAAU,OAAOwB,UAAWuF,EAAcjH,QAASgH,EAA3D,uCAOT,ECXD,EAbmB,kBACjB,iBAAK9G,UAAU,cAAf,WACE,iBAAKA,UAAU,cAAf,WACE,gBAAKA,UAAU,WACf,gBAAKA,UAAU,OAAf,8BAEF,iBAAKA,UAAU,gBAAf,WACE,gBAAKA,UAAU,WACf,gBAAKA,UAAU,OAAf,2BARa,EC0FnB,EA1EmB,SAAC,GAQiB,IAPnCkD,EAOkC,EAPlCA,YACAoB,EAMkC,EANlCA,QACA2C,EAKkC,EALlCA,gBACAC,EAIkC,EAJlCA,eACA/D,EAGkC,EAHlCA,eACAgE,EAEkC,EAFlCA,UACAC,EACkC,EADlCA,aAEA,GAAgC1C,EAAAA,EAAAA,UAAS/E,EAASoD,KAAlD,eAAOK,EAAP,KAAiBC,EAAjB,KACA,GAAwCqB,EAAAA,EAAAA,UAAS,IAAjD,eAAOpB,EAAP,KAAqBC,EAArB,KACA,GAAkCmB,EAAAA,EAAAA,UAAS,GAA3C,eAAOC,EAAP,KAAkBC,EAAlB,MAEAC,EAAAA,EAAAA,YAAU,WACRD,EAAa,EACd,GAAE,CAACxB,EAAUE,IAEd,IAAM+D,EAAiB/D,EAAagE,cAEpC,OACE,gBAAKtH,UAAU,mBAAf,UACE,iBAAKA,UAAU,gBAAf,WACE,gBAAKA,UAAU,wBAAf,UACE,SAAC,EAAD,CACQkD,YAAAA,EAAaC,eAAAA,EAAgBC,SAAAA,EAAUC,YAAAA,EAAaC,aAAAA,EAAcC,gBAAAA,OAG5E,iBAAKvD,UAAU,eAAf,WACE,gBAAIA,UAAU,aAAd,oBAAmC2G,EAAAA,GAAAA,WAAA,GAAkBC,EAAAA,IAAlB,eAA2C1D,KAA9E,mBACA,SAAC,EAAD,KACA,iBAAKlD,UAAU,cAAf,UACsB,IAAnBsE,EAAQJ,SACP,iBAAKlE,UAAU,wBAAf,yBACe2G,EAAAA,GAAAA,WAAA,GAAkBC,EAAAA,IAAlB,eAA2C1D,KAD1D,YAIDoB,EACED,QAAO,SAACzE,GAAD,MAA+B,KAAnByH,GAAyBzH,EAAOgB,KAAK0G,cAAcrD,SAASoD,EAAxE,IACPpC,MAAMN,EAAYvB,GAAWuB,EAAY,GAAKvB,GAC9CU,KAAI,SAAClE,GACJ,IAAM2H,GAAkD,IAArCN,EAAgBP,QAAQ9G,GAC3C,OACE,SAAC,EAAD,CAEEC,OAAQ0H,EAAa,gBAAalC,EAClCzF,OAAQA,EACRE,QAAS,kBAAOyH,EAAaH,EAAaxH,GAAUuH,EAAUvH,EAArD,GAHJA,EAAO6C,GAMjB,OAEJyE,IAAkB,SAAClC,EAAA,EAAD,KACnB,iBAAKhF,UAAU,aAAf,WACE,mBACEA,UAAU,WACVF,QAAS,kBAAM8E,GAAa,SAACD,GAAD,OAAeA,EAAY,CAA3B,GAAnB,EACTnD,SAAwB,IAAdmD,EAHZ,uBAOA,mBACE3E,UAAU,OACVF,QAAS,kBAAM8E,GAAa,SAACD,GAAD,OAAeA,EAAY,CAA3B,GAAnB,EACTnD,UAAWmD,EAAY,GAAKvB,GAAYkB,EAAQJ,OAAS,EAH3D,4BAYX,EC1BD,EAjDmB,SAAC,GAMiB,IALnChB,EAKkC,EALlCA,YACAC,EAIkC,EAJlCA,eACA8D,EAGkC,EAHlCA,gBACAO,EAEkC,EAFlCA,qBACAC,EACkC,EADlCA,yBAEA,GAAmCC,EAAAA,EAAAA,IAA2BxE,EAAasE,GAA3E,eAAOlD,EAAP,KAAgB+B,EAAhB,KAAyBC,EAAzB,KASA,OACE,iBAAKtG,UAAU,cAAf,UACGsG,EAAOpC,OAAS,IACf,iBAAKlE,UAAU,wBAAf,uCAC6B2G,EAAAA,GAAAA,WAAA,GAAkBC,EAAAA,IAAlB,eAA2C1D,KADxE,KAEE,wBACGoD,EAAOxC,KAAI,SAACqB,EAAO0B,GAAR,OACV,wBAAa1B,EAAMC,SAAVyB,EADC,SAMC,IAAlBP,EAAOpC,QAAgBmC,IACtB,iBAAKrG,UAAU,0BAAf,iCACuB2G,EAAAA,GAAAA,WAAA,GAAkBC,EAAAA,IAAlB,eAA2C1D,QAGjD,IAAlBoD,EAAOpC,QAAgBmC,GAA8B,IAAnB/B,EAAQJ,SAAgB,SAACc,EAAA,EAAD,IACxC,IAAlBsB,EAAOpC,SACN,SAAC,EAAD,CACEhB,YAAaA,EACbC,eAAgBA,EAChB+D,eAAkC,IAAlBZ,EAAOpC,QAAgBmC,EACvC/B,QAASA,EACT2C,gBAAiBA,EACjBE,UAhCuB,SAACvH,GAC9B4H,EAAqB5H,EACtB,EA+BOwH,aA9B4B,SAACxH,GACnC6H,EAAyB7H,EAC1B,MAiCF,ECjBD,EA9BsB,SAAC,GAAD,IACpBsD,EADoB,EACpBA,YACAC,EAFoB,EAEpBA,eACA8D,EAHoB,EAGpBA,gBACAU,EAJoB,EAIpBA,WACAC,EALoB,EAKpBA,cACAC,EANoB,EAMpBA,cANoB,OAQpB,iBAAK7H,UAAU,iBAAf,WACE,SAAC,EAAD,CACEkD,YAAaA,EACbC,eAAgBA,EAChB8D,gBAAiBA,EACjBO,qBAAsBG,EACtBF,yBAA0BG,KAE5B,gBAAK5H,UAAU,iBAAf,UACE,oBACEA,UAAWC,IAAW,QAAS,CAC7BuB,SAAqC,IAA3ByF,EAAgB/C,SAE5B1C,SAAqC,IAA3ByF,EAAgB/C,OAC1BpE,QAAS+H,EALX,sBAOYZ,EAAgB/C,OAP5B,IAOqCyC,EAAAA,GAAAA,WAAA,GAAkBC,EAAAA,IAAlB,eAA2C1D,YAxBhE,GPPjBN,SAAAA,GAAAA,EAAAA,OAAAA,SAAAA,EAAAA,OAAAA,QAAAA,CAAAA,CAAAA,IAAAA,EAAAA,CAAAA,IAKL,IA0EA,EA1EwB,WACtB,IAAQY,GAAgBC,EAAAA,EAAAA,YAAWC,EAAAA,GAA3BF,YACR,GAAsCkB,EAAAA,EAAAA,UACpC,IAAIN,KACF,OAAIZ,GACDM,KAAI,SAACF,GAAD,OAAgBD,EAAAA,GAAAA,MAAwB,SAACjC,GAAD,OAAYA,EAAOkC,aAAeA,CAAlC,GAAxC,IACJE,KAAI,SAACpC,GAAD,cAAYA,QAAZ,IAAYA,OAAZ,EAAYA,EAAQe,EAApB,MAJX,eAAOS,EAAP,KAAoBC,EAApB,KAOA,GAAwBuB,EAAAA,EAAAA,UAAS9B,EAAakF,QAA9C,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA8CtD,EAAAA,EAAAA,UAAS,IAAIN,KAA3D,eAAO6D,EAAP,KAAwBC,EAAxB,KAEMC,GAAiBC,EAAAA,EAAAA,UAAQ,yBAAUlF,EAAV,GAAwB,CAACA,IAExDmF,QAAQC,IAAIH,IAEZtD,EAAAA,EAAAA,YAAU,WACRqD,GAAmB,SAAC5D,GAIlB,OAHA,OAAIA,GACDD,QAAO,SAACzE,GAAD,OAAa2I,EAAAA,GAAAA,WAAA,UAAgCrF,IAAae,SAASrE,EAAOkB,KAA1E,IACP0H,SAAQ,SAAC5I,GAAD,OAAY0E,EAAQmE,OAAO7I,EAA3B,IACJ,IAAIwE,IAAIE,EAChB,GACF,GAAE,CAACpB,EAAagF,IAEjB,IAAMQ,GAAoB5C,EAAAA,EAAAA,cACxB,WAAmC,IAAD,uBAA9B5C,EAA8B,yBAA9BA,EAA8B,gBAChCmF,QAAQC,IAAI,WAAYpF,GACxBC,EAAe,IAAIiB,IAAIlB,GACxB,GACD,CAACC,IAEGwE,GAAa7B,EAAAA,EAAAA,cACjB,sCAAI6C,EAAJ,yBAAIA,EAAJ,uBACET,GAAmB,SAAC5D,GAElB,OADAqE,EAAaH,SAAQ,SAAC5I,GAAD,OAAY0E,EAAQsE,IAAIhJ,EAAxB,IACd,IAAIwE,IAAIE,EAChB,GAJH,GAKA,CAAC4D,IAEGN,GAAgB9B,EAAAA,EAAAA,cACpB,sCAAImC,EAAJ,yBAAIA,EAAJ,uBACEC,GAAmB,SAAC5D,GAElB,OADA2D,EAAgBO,SAAQ,SAAC5I,GAAD,OAAY0E,EAAQmE,OAAO7I,EAA3B,IACjB,IAAIwE,IAAIE,EAChB,GAJH,GAKA,CAAC4D,IAGH,OACE,gBAAKlI,UAAU,mBAAf,SACG+H,IAASnF,EAAakF,QACrB,SAAC,EAAD,CACE5E,YAAaiF,EACbhF,eAAgBuF,EAChBzB,iBAAe,OAAMgB,GACrBN,WAAYA,EACZC,cAAeA,EACfC,cAAe,kBAAMG,EAAQpF,EAAaiG,OAA3B,KAGjB,SAAC,EAAD,CACE3F,YAAaiF,EACb7D,SAAO,OAAM2D,GACbnB,gBAAiB,WACfoB,EAAmB,IAAI9D,KACvB4D,EAAQpF,EAAakF,OACtB,KAKV,C","sources":["app/spotify-app/list-options/FollowListOptions.tsx","app/spotify-app/follow/FollowInfo.tsx","app/partials/input/Input.tsx","app/partials/select/Select.tsx","app/spotify-app/manage/UnfollowFollows.tsx","app/spotify-app/unfollow-all/partials/FollowList.tsx","app/spotify-app/unfollow-all/UnfollowAll.tsx","app/spotify-app/manage/partials/FollowsRemove.tsx","app/spotify-app/all-follows/partials/ListLegend.tsx","app/spotify-app/all-follows/partials/FollowList.tsx","app/spotify-app/all-follows/AllFollows.tsx","app/spotify-app/manage/partials/FollowsSelect.tsx"],"sourcesContent":["import \"./FollowListOptions.css\";\n\nimport React, { useContext } from \"react\";\n\nimport Input from \"../../partials/input/Input\";\nimport Select from \"../../partials/select/Select\";\nimport { FollowType, PERMISSION_OPTIONS } from \"../../../client/spotify/model\";\nimport { isNullOrUndefined } from \"../../../util\";\nimport AppContext from \"../store/AppContext\";\nimport Checkbox from \"../../partials/checkbox/Checkbox\";\n\nexport enum ViewSize {\n  FIFTY = 50,\n  TWENTY_FIVE = 25,\n  TEN = 10,\n}\n\nconst VIEW_OPTIONS = [\n  { label: ViewSize.TEN, id: ViewSize.TEN },\n  { label: ViewSize.TWENTY_FIVE, id: ViewSize.TWENTY_FIVE },\n  { label: ViewSize.FIFTY, id: ViewSize.FIFTY },\n];\n\ninterface FollowListOptionsProps {\n  followTypes: FollowType[];\n  setFollowTypes?: (...type: FollowType[]) => void;\n  viewSize: ViewSize;\n  setViewSize: (size: ViewSize) => void;\n  filterString?: string;\n  setFilterString?: (filterString: string) => void;\n}\n\nconst FollowListOptions = ({\n  followTypes,\n  setFollowTypes,\n  viewSize,\n  setViewSize,\n  filterString,\n  setFilterString,\n}: FollowListOptionsProps): JSX.Element => {\n  const { permissions } = useContext(AppContext);\n\n  return (\n    <div className=\"follow-list-options\">\n      <h2>Options</h2>\n      <div className=\"type-option\">\n        {PERMISSION_OPTIONS.filter(({ permission }) => permissions.has(permission)).map((option) => (\n          <label key={option.id}>\n            <Checkbox\n              checked={followTypes.includes(option.id)}\n              disabled={followTypes.includes(option.id) && followTypes.length === 1}\n              onChange={(isChecked) =>\n                isChecked\n                  ? setFollowTypes?.(...new Set([...followTypes, option.id]))\n                  : setFollowTypes?.(...new Set(followTypes.filter((type) => type !== option.id)))\n              }\n            />\n            <span>{option.label}</span>\n          </label>\n        ))}\n      </div>\n      <hr />\n      {!isNullOrUndefined(filterString) && !isNullOrUndefined(setFilterString) ? (\n        <div className=\"filter-option\">\n          <label>Search:</label>\n          <Input value={filterString} onChange={setFilterString} />\n        </div>\n      ) : null}\n      <div className=\"view-option\">\n        <label>Results per page:</label>\n        <Select value={viewSize} onChange={setViewSize} options={VIEW_OPTIONS} />\n      </div>\n      <button\n        className=\"warning\"\n        onClick={() => {\n          setFilterString?.(\"\");\n          setViewSize(ViewSize.TEN);\n        }}\n      >\n        Reset\n      </button>\n    </div>\n  );\n};\n\nexport default FollowListOptions;\n","import \"./FollowInfo.css\";\n\nimport classNames from \"classnames\";\nimport React from \"react\";\n\nimport { Follow, RESULTS_TYPE_NAME_CAP } from \"../../../client/spotify/model\";\nimport DefaultImage from \"./default.png\";\nimport SpotifyLogo from \"./spotify-logo.png\";\n\nexport type FollowStatus = \"selected\" | \"succeeded\" | \"failed\";\n\ninterface FollowProps {\n  follow: Follow;\n  description?: string;\n  status?: FollowStatus;\n  onClick?: () => void;\n}\n\nconst FollowInfo = ({ follow, status, onClick, description }: FollowProps): JSX.Element => (\n  <div\n    className={classNames(\"follow\", status, { clickable: !!onClick })}\n    onClick={(e) => {\n      if (\n        (e.target as any).classList.contains(\"follow-link\") ||\n        (e.target as any).classList.contains(\"spotify-link-logo\")\n      ) {\n        return;\n      }\n      return onClick?.();\n    }}\n  >\n    <div className=\"avatar\">\n      <img src={follow.images[0]?.url ?? DefaultImage} alt={`${follow.name} Avatar`} />\n    </div>\n    <h3 className=\"name\">\n      {follow.name} ({RESULTS_TYPE_NAME_CAP[follow.type]})\n    </h3>\n    <a className=\"follow-link\" href={follow.external_urls.spotify} target=\"_blank\" rel=\"noopener noreferrer\">\n      View on <img className=\"spotify-link-logo\" src={SpotifyLogo} alt=\"Spotify Logo\" />\n    </a>\n    {description && <div className=\"description\">{description}</div>}\n  </div>\n);\n\nexport default FollowInfo;\n","import \"./Input.css\";\n\nimport React from \"react\";\n\ninterface InputProps {\n  value: string;\n  placeholder?: string;\n  onChange: (id: string) => void;\n}\n\nconst Input = ({ value, placeholder, onChange }: InputProps): JSX.Element => (\n  <input type=\"text\" placeholder={placeholder} value={value} onChange={(e) => onChange(e.target.value)} />\n);\n\nexport default Input;\n","import React from \"react\";\nimport ReactSelect from \"react-select\";\n\nimport { isNullOrUndefined } from \"../../../util\";\n\ninterface SelectOption<K, V> {\n  id: K;\n  label: V;\n}\n\nconst isOption = <K, V>(option: unknown): option is SelectOption<K, V> =>\n  typeof option === \"object\" && !isNullOrUndefined(option) && \"id\" in option && \"label\" in option;\n\ninterface SelectProps<K, V> {\n  options: SelectOption<K, V>[];\n  value: K;\n  disabled?: boolean;\n  onChange?: (id: K) => void;\n}\n\nconst Select = <K, V>({ options, value, disabled = false, onChange }: SelectProps<K, V>): JSX.Element => (\n  <ReactSelect\n    styles={{\n      option: (provided, state) => ({\n        ...provided,\n        background: state.isFocused ? \"#282828\" : \"#121212\",\n        color: \"#d8f3e0\",\n      }),\n      control: (provided) => ({\n        ...provided,\n        border: \"1px solid #d8f3e0\",\n        background: \"#121212\",\n        borderRadius: \"0\",\n      }),\n      menu: (provided) => ({\n        ...provided,\n        background: \"#121212\",\n        border: \"1px solid #d8f3e0\",\n      }),\n      singleValue: (provided) => ({\n        ...provided,\n        color: \"#d8f3e0\",\n      }),\n      valueContainer: (provided) => ({\n        ...provided,\n      }),\n    }}\n    captureMenuScroll={false}\n    isDisabled={disabled}\n    value={options.find((option) => option.id === value)}\n    onChange={(option) => isOption(option) && onChange?.(option.id)}\n    options={options}\n  />\n);\n\nexport default Select;\n","import \"./UnfollowFollows.css\";\n\nimport React, { useCallback, useContext, useEffect, useMemo, useState } from \"react\";\n\nimport { FollowType, Follow, getResultTypesForFollowTypes, PERMISSION_OPTIONS } from \"../../../client/spotify/model\";\nimport FollowsRemove from \"./partials/FollowsRemove\";\nimport FollowsSelect from \"./partials/FollowsSelect\";\nimport AppContext from \"../store/AppContext\";\n\n// import Loading from \"../../partials/loading/Loading\";\nenum UnfollowView {\n  SELECT = \"select\",\n  REMOVE = \"remove\",\n}\n\nconst UnfollowFollows = (): JSX.Element => {\n  const { permissions } = useContext(AppContext);\n  const [followTypes, setFollowTypes] = useState(\n    new Set<FollowType>(\n      [...permissions]\n        .map((permission) => PERMISSION_OPTIONS.find((option) => option.permission === permission)!)\n        .map((option) => option?.id),\n    ),\n  );\n  const [view, setView] = useState(UnfollowView.SELECT);\n  const [followsToRemove, setFollowsToRemove] = useState(new Set<Follow>());\n\n  const followTypeList = useMemo(() => [...followTypes], [followTypes]);\n\n  console.log(followTypeList);\n\n  useEffect(() => {\n    setFollowsToRemove((follows) => {\n      [...follows]\n        .filter((follow) => !getResultTypesForFollowTypes(...followTypes).includes(follow.type))\n        .forEach((follow) => follows.delete(follow));\n      return new Set(follows);\n    });\n  }, [followTypes, setFollowsToRemove]);\n\n  const updateFollowTypes = useCallback(\n    (...followTypes: FollowType[]) => {\n      console.log(\"Updating\", followTypes);\n      setFollowTypes(new Set(followTypes));\n    },\n    [setFollowTypes],\n  );\n  const addFollows = useCallback(\n    (...followsToAdd: Follow[]) =>\n      setFollowsToRemove((follows) => {\n        followsToAdd.forEach((follow) => follows.add(follow));\n        return new Set(follows);\n      }),\n    [setFollowsToRemove],\n  );\n  const removeFollows = useCallback(\n    (...followsToRemove: Follow[]) =>\n      setFollowsToRemove((follows) => {\n        followsToRemove.forEach((follow) => follows.delete(follow));\n        return new Set(follows);\n      }),\n    [setFollowsToRemove],\n  );\n\n  return (\n    <div className=\"unfollow-follows\">\n      {view === UnfollowView.SELECT ? (\n        <FollowsSelect\n          followTypes={followTypeList}\n          setFollowTypes={updateFollowTypes}\n          selectedFollows={[...followsToRemove]}\n          addFollows={addFollows}\n          removeFollows={removeFollows}\n          startUnfollow={() => setView(UnfollowView.REMOVE)}\n        />\n      ) : (\n        <FollowsRemove\n          followTypes={followTypeList}\n          follows={[...followsToRemove]}\n          restartUnfollow={() => {\n            setFollowsToRemove(new Set());\n            setView(UnfollowView.SELECT);\n          }}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default UnfollowFollows;\n","import \"./FollowList.css\";\n\nimport React, { useEffect, useState } from \"react\";\n\nimport { Follow, FollowType } from \"../../../../client/spotify/model\";\nimport Loading from \"../../../partials/loading/Loading\";\nimport FollowInfo, { FollowStatus } from \"../../follow/FollowInfo\";\nimport FollowListOptions, { ViewSize } from \"../../list-options/FollowListOptions\";\nimport { FetchError } from \"../../../../util/retry-fetch\";\n\ninterface FollowWithStatus {\n  follow: Follow;\n  status: FollowStatus;\n}\n\ninterface FollowWithError extends FollowWithStatus {\n  status: \"failed\";\n  error: FetchError;\n}\n\nconst isFollowWithError = (follow: FollowWithStatus | FollowWithError): follow is FollowWithError =>\n  follow.status === \"failed\";\n\ninterface FollowListProps {\n  followTypes: FollowType[];\n  follows: FollowWithStatus[] | FollowWithError[];\n  unfollowing: boolean;\n  completed: boolean;\n  header: JSX.Element;\n}\n\nconst FollowList = ({ followTypes, follows, unfollowing, completed, header }: FollowListProps): JSX.Element => {\n  const [viewSize, setViewSize] = useState(ViewSize.TEN);\n  const [pageIndex, setPageIndex] = useState(0);\n\n  useEffect(() => {\n    setPageIndex(0);\n  }, [viewSize]);\n\n  useEffect(() => {\n    if (!completed) {\n      return;\n    }\n\n    setPageIndex(0);\n  }, [completed]);\n\n  const failedFollows = follows.filter((follow) => follow.status === \"failed\");\n\n  const followsToShow = completed && failedFollows.length > 0 ? failedFollows : follows;\n\n  return (\n    <div className=\"unfollow-follows-list\">\n      <div className=\"results-table\">\n        <div className=\"results-table-options\">\n          <FollowListOptions {...{ followTypes, viewSize, setViewSize }} />\n        </div>\n        <div className=\"results-view\">\n          {header}\n          {unfollowing && <Loading />}\n          <div className=\"follow-list\">\n            {followsToShow.slice(pageIndex * viewSize, (pageIndex + 1) * viewSize).map((details) => (\n              <FollowInfo\n                key={details.follow.id}\n                status={details.status}\n                follow={details.follow}\n                description={\n                  isFollowWithError(details) ? `Could not unfollow. Error: ${details.error.message}` : undefined\n                }\n              />\n            ))}\n          </div>\n          <div className=\"pagination\">\n            <button\n              className=\"previous\"\n              onClick={() => setPageIndex((pageIndex) => pageIndex - 1)}\n              disabled={pageIndex === 0}\n            >\n              Previous\n            </button>\n            <button\n              className=\"next\"\n              onClick={() => setPageIndex((pageIndex) => pageIndex + 1)}\n              disabled={(pageIndex + 1) * viewSize >= follows.length - 1}\n            >\n              Next\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default FollowList;\n","import \"./UnfollowAll.css\";\n\nimport React, { useCallback, useEffect, useState } from \"react\";\n\nimport { useUnfollowFollowsChunked } from \"../../../client/spotify\";\nimport {\n  RESULTS_TYPE_NAME_LC,\n  Follow,\n  FollowType,\n  getFollowTypeText,\n  UnfollowChunkedResult,\n  isChunkedSuccessResult,\n} from \"../../../client/spotify/model\";\nimport { FollowStatus } from \"../follow/FollowInfo\";\nimport FollowList from \"./partials/FollowList\";\nimport { FetchError } from \"../../../util/retry-fetch\";\n\ninterface UnfollowAllProps {\n  followTypes: FollowType[];\n  follows: Follow[];\n  onComplete: () => void;\n}\n\ntype FollowWithError = { follow: Follow; error: FetchError };\n\nconst getInProgressFollow = (follow: Follow) => ({\n  follow,\n  status: \"selected\" as FollowStatus,\n});\nconst getSucceededFollow = (follow: Follow) => ({\n  follow,\n  status: \"succeeded\" as FollowStatus,\n});\nconst getFailedFollow = (follow: FollowWithError) => ({\n  ...follow,\n  status: \"failed\" as FollowStatus,\n});\n\nconst UnfollowAll = ({ followTypes, follows, onComplete }: UnfollowAllProps) => {\n  const [failedFollows, setFailedFollows] = useState<FollowWithError[]>([]);\n  const [succeededFollows, setSucceededFollows] = useState<Follow[]>([]);\n\n  const newUnfollowsHandler = useCallback(\n    (newUnfollows: UnfollowChunkedResult<Follow>) => {\n      if (isChunkedSuccessResult(newUnfollows)) {\n        setSucceededFollows((succeededFollows) => [...succeededFollows, ...newUnfollows.succeeded]);\n      } else {\n        setFailedFollows((failedFollows) => [\n          ...failedFollows,\n          ...newUnfollows.failed.map((follow) => ({ follow, error: newUnfollows.error })),\n        ]);\n      }\n    },\n    [setSucceededFollows, setFailedFollows],\n  );\n\n  const [resultsChunked, loading, errors] = useUnfollowFollowsChunked(follows, newUnfollowsHandler);\n\n  useEffect(() => {\n    const totalAttemptedFollows = failedFollows.length + succeededFollows.length;\n    if (errors.length === 0 && !loading && !!resultsChunked && totalAttemptedFollows === follows.length) {\n      onComplete();\n    }\n  }, [errors, loading, resultsChunked, onComplete, failedFollows, succeededFollows, follows]);\n\n  return (\n    <div className=\"unfollow-all-list\">\n      <FollowList\n        followTypes={followTypes}\n        follows={[\n          ...failedFollows.map(getFailedFollow),\n          ...follows\n            .filter((Follow) => !failedFollows.find((failedFollow) => failedFollow.follow.id === Follow.id))\n            .filter((Follow) => succeededFollows.indexOf(Follow) === -1)\n            .map(getInProgressFollow),\n          ...succeededFollows.map(getSucceededFollow),\n        ]}\n        unfollowing={errors.length === 0 && loading}\n        completed={errors.length === 0 && !loading && !!resultsChunked}\n        header={\n          <>\n            {errors.length > 0 && (\n              <div className=\"error loading-message\">\n                Error unfollowing {getFollowTypeText(RESULTS_TYPE_NAME_LC, ...followTypes)}:\n                <ul>\n                  {errors.map((error, i) => (\n                    <li key={i}>{error.message}</li>\n                  ))}\n                </ul>\n              </div>\n            )}\n            {errors.length === 0 && loading && (\n              <div className=\"warning loading-message\">\n                Unfollowing {getFollowTypeText(RESULTS_TYPE_NAME_LC, ...followTypes)}\n              </div>\n            )}\n            {errors.length === 0 && !loading && resultsChunked.length > 0 && failedFollows.length === 0 && (\n              <div className=\"success loading-message\">\n                Unfollowed all {getFollowTypeText(RESULTS_TYPE_NAME_LC, ...followTypes)}!\n              </div>\n            )}\n            {errors.length === 0 && !loading && resultsChunked.length > 0 && failedFollows.length > 0 && (\n              <div className=\"error loading-message\">\n                Could not unfollow some {getFollowTypeText(RESULTS_TYPE_NAME_LC, ...followTypes)}! Failed{\" \"}\n                {getFollowTypeText(RESULTS_TYPE_NAME_LC, ...followTypes)} listed below\n              </div>\n            )}\n          </>\n        }\n      />\n    </div>\n  );\n};\n\nexport default UnfollowAll;\n","import \"./FollowsRemove.css\";\n\nimport React, { useState } from \"react\";\n\nimport { Follow, FollowType } from \"../../../../client/spotify/model\";\nimport UnfollowAll from \"../../unfollow-all/UnfollowAll\";\n\ninterface ArtistsRemoveProps {\n  followTypes: FollowType[];\n  follows: Follow[];\n  restartUnfollow: () => void;\n}\n\nconst ArtistsRemove = ({ followTypes, follows, restartUnfollow }: ArtistsRemoveProps): JSX.Element => {\n  const [allowRestart, setAllowRestart] = useState(false);\n\n  return (\n    <div className=\"artists-remove\">\n      <UnfollowAll followTypes={followTypes} follows={follows} onComplete={() => setAllowRestart(true)} />\n      {allowRestart && (\n        <div className=\"restart-unfollow\">\n          <button className=\"info\" disabled={!allowRestart} onClick={restartUnfollow}>\n            Unfollow more artists\n          </button>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default ArtistsRemove;\n","import \"./ListLegend.css\";\n\nimport React from \"react\";\n\nconst ListLegend = (): JSX.Element => (\n  <div className=\"list-legend\">\n    <div className=\"item normal\">\n      <div className=\"color\"></div>\n      <div className=\"text\">Not Selected</div>\n    </div>\n    <div className=\"item selected\">\n      <div className=\"color\"></div>\n      <div className=\"text\">Selected</div>\n    </div>\n  </div>\n);\n\nexport default ListLegend;\n","import \"./FollowList.css\";\n\nimport React, { useEffect, useState } from \"react\";\n\nimport { RESULTS_TYPE_NAME_LC, Follow, FollowType, getFollowTypeText } from \"../../../../client/spotify/model\";\nimport Loading from \"../../../partials/loading/Loading\";\nimport FollowInfo from \"../../follow/FollowInfo\";\nimport FollowListOptions, { ViewSize } from \"../../list-options/FollowListOptions\";\nimport ListLegend from \"./ListLegend\";\n\ninterface FollowListProps {\n  followTypes: FollowType[];\n  follows: Follow[];\n  selectedFollows: Follow[];\n  loadingResults: boolean;\n  setFollowTypes: (...type: FollowType[]) => void;\n  addFollow: (followToAdd: Follow) => void;\n  removeFollow: (followToRemove: Follow) => void;\n}\n\nconst FollowList = ({\n  followTypes,\n  follows,\n  selectedFollows,\n  loadingResults,\n  setFollowTypes,\n  addFollow,\n  removeFollow,\n}: FollowListProps): JSX.Element => {\n  const [viewSize, setViewSize] = useState(ViewSize.TEN);\n  const [filterString, setFilterString] = useState(\"\");\n  const [pageIndex, setPageIndex] = useState(0);\n\n  useEffect(() => {\n    setPageIndex(0);\n  }, [viewSize, filterString]);\n\n  const filterStringLc = filterString.toLowerCase();\n\n  return (\n    <div className=\"all-follows-list\">\n      <div className=\"results-table\">\n        <div className=\"results-table-options\">\n          <FollowListOptions\n            {...{ followTypes, setFollowTypes, viewSize, setViewSize, filterString, setFilterString }}\n          />\n        </div>\n        <div className=\"results-view\">\n          <h2 className=\"list-title\">Select {getFollowTypeText(RESULTS_TYPE_NAME_LC, ...followTypes)} to unfollow</h2>\n          <ListLegend />\n          <div className=\"artist-list\">\n            {follows.length === 0 && (\n              <div className=\"error loading-message\">\n                No followed {getFollowTypeText(RESULTS_TYPE_NAME_LC, ...followTypes)} found\n              </div>\n            )}\n            {follows\n              .filter((follow) => filterStringLc === \"\" || follow.name.toLowerCase().includes(filterStringLc))\n              .slice(pageIndex * viewSize, (pageIndex + 1) * viewSize)\n              .map((follow) => {\n                const isSelected = selectedFollows.indexOf(follow) !== -1;\n                return (\n                  <FollowInfo\n                    key={follow.id}\n                    status={isSelected ? \"selected\" : undefined}\n                    follow={follow}\n                    onClick={() => (isSelected ? removeFollow(follow) : addFollow(follow))}\n                  />\n                );\n              })}\n          </div>\n          {loadingResults && <Loading />}\n          <div className=\"pagination\">\n            <button\n              className=\"previous\"\n              onClick={() => setPageIndex((pageIndex) => pageIndex - 1)}\n              disabled={pageIndex === 0}\n            >\n              Previous\n            </button>\n            <button\n              className=\"next\"\n              onClick={() => setPageIndex((pageIndex) => pageIndex + 1)}\n              disabled={(pageIndex + 1) * viewSize >= follows.length - 1}\n            >\n              Next\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default FollowList;\n","import \"./AllFollows.css\";\n\nimport React from \"react\";\n\nimport { useGetAllUserArtistFollows } from \"../../../client/spotify\";\nimport { RESULTS_TYPE_NAME_LC, Follow, FollowType, getFollowTypeText } from \"../../../client/spotify/model\";\nimport Loading from \"../../partials/loading/Loading\";\nimport FollowList from \"./partials/FollowList\";\n\ninterface AllFollowsProps {\n  followTypes: FollowType[];\n  selectedFollows: Follow[];\n  setFollowTypes: (...types: FollowType[]) => void;\n  addFollowsForRemoval: (...follows: Follow[]) => void;\n  removeFollowsFromRemoval: (...follows: Follow[]) => void;\n}\n\nconst AllFollows = ({\n  followTypes,\n  setFollowTypes,\n  selectedFollows,\n  addFollowsForRemoval,\n  removeFollowsFromRemoval,\n}: AllFollowsProps): JSX.Element => {\n  const [follows, loading, errors] = useGetAllUserArtistFollows(followTypes, addFollowsForRemoval);\n\n  const addFollowToRemovalList = (follow: Follow) => {\n    addFollowsForRemoval(follow);\n  };\n  const removeFollowFromRemovalList = (follow: Follow) => {\n    removeFollowsFromRemoval(follow);\n  };\n\n  return (\n    <div className=\"all-follows\">\n      {errors.length > 0 && (\n        <div className=\"error loading-message\">\n          Error retrieving followed {getFollowTypeText(RESULTS_TYPE_NAME_LC, ...followTypes)}:\n          <ul>\n            {errors.map((error, i) => (\n              <li key={i}>{error.message}</li>\n            ))}\n          </ul>\n        </div>\n      )}\n      {errors.length === 0 && loading && (\n        <div className=\"warning loading-message\">\n          Retrieving followed {getFollowTypeText(RESULTS_TYPE_NAME_LC, ...followTypes)}\n        </div>\n      )}\n      {errors.length === 0 && loading && follows.length === 0 && <Loading />}\n      {errors.length === 0 && (\n        <FollowList\n          followTypes={followTypes}\n          setFollowTypes={setFollowTypes}\n          loadingResults={errors.length === 0 && loading}\n          follows={follows}\n          selectedFollows={selectedFollows}\n          addFollow={addFollowToRemovalList}\n          removeFollow={removeFollowFromRemovalList}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default AllFollows;\n","import \"./FollowsSelect.css\";\n\nimport classNames from \"classnames\";\nimport React from \"react\";\n\nimport { RESULTS_TYPE_NAME_LC, Follow, FollowType, getFollowTypeText } from \"../../../../client/spotify/model\";\nimport AllFollows from \"../../all-follows/AllFollows\";\n\ninterface FollowsSelectProps {\n  followTypes: FollowType[];\n  selectedFollows: Follow[];\n  setFollowTypes: (...types: FollowType[]) => void;\n  addFollows: (...follows: Follow[]) => void;\n  removeFollows: (...follows: Follow[]) => void;\n  startUnfollow: () => void;\n}\n\nconst FollowsSelect = ({\n  followTypes,\n  setFollowTypes,\n  selectedFollows,\n  addFollows,\n  removeFollows,\n  startUnfollow,\n}: FollowsSelectProps): JSX.Element => (\n  <div className=\"follows-select\">\n    <AllFollows\n      followTypes={followTypes}\n      setFollowTypes={setFollowTypes}\n      selectedFollows={selectedFollows}\n      addFollowsForRemoval={addFollows}\n      removeFollowsFromRemoval={removeFollows}\n    />\n    <div className=\"start-unfollow\">\n      <button\n        className={classNames(\"error\", {\n          disabled: selectedFollows.length === 0,\n        })}\n        disabled={selectedFollows.length === 0}\n        onClick={startUnfollow}\n      >\n        Unfollow {selectedFollows.length} {getFollowTypeText(RESULTS_TYPE_NAME_LC, ...followTypes)}\n      </button>\n    </div>\n  </div>\n);\n\nexport default FollowsSelect;\n"],"names":["ViewSize","follow","status","onClick","description","className","classNames","clickable","e","target","classList","contains","src","images","url","DefaultImage","alt","name","RESULTS_TYPE_NAME_CAP","type","href","external_urls","spotify","rel","SpotifyLogo","value","placeholder","onChange","options","disabled","styles","option","provided","state","background","isFocused","color","control","border","borderRadius","menu","singleValue","valueContainer","captureMenuScroll","isDisabled","find","id","isNullOrUndefined","isOption","UnfollowView","VIEW_OPTIONS","label","TEN","TWENTY_FIVE","FIFTY","followTypes","setFollowTypes","viewSize","setViewSize","filterString","setFilterString","permissions","useContext","AppContext","PERMISSION_OPTIONS","permission","has","map","Checkbox","checked","includes","length","isChecked","Set","filter","follows","unfollowing","completed","header","useState","pageIndex","setPageIndex","useEffect","failedFollows","followsToShow","Loading","slice","details","error","message","undefined","getInProgressFollow","getSucceededFollow","getFailedFollow","onComplete","setFailedFollows","succeededFollows","setSucceededFollows","newUnfollowsHandler","useCallback","newUnfollows","isChunkedSuccessResult","succeeded","failed","useUnfollowFollowsChunked","resultsChunked","loading","errors","totalAttemptedFollows","Follow","failedFollow","indexOf","getFollowTypeText","RESULTS_TYPE_NAME_LC","i","restartUnfollow","allowRestart","setAllowRestart","selectedFollows","loadingResults","addFollow","removeFollow","filterStringLc","toLowerCase","isSelected","addFollowsForRemoval","removeFollowsFromRemoval","useGetAllUserArtistFollows","addFollows","removeFollows","startUnfollow","SELECT","view","setView","followsToRemove","setFollowsToRemove","followTypeList","useMemo","console","log","getResultTypesForFollowTypes","forEach","delete","updateFollowTypes","followsToAdd","add","REMOVE"],"sourceRoot":""}