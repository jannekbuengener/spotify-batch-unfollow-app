{"version":3,"file":"static/js/346.925ed976.chunk.js","mappings":"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","sources":["app/spotify-app/follow/FollowInfo.tsx","app/partials/input/Input.tsx","app/partials/select/Select.tsx","app/spotify-app/list-options/FollowListOptions.tsx","app/spotify-app/unfollow-all/partials/FollowList.tsx","app/spotify-app/unfollow-all/UnfollowAll.tsx","app/spotify-app/manage/partials/FollowsRemove.tsx","app/spotify-app/all-follows/partials/ListLegend.tsx","app/spotify-app/all-follows/partials/FollowList.tsx","app/spotify-app/all-follows/AllFollows.tsx","app/spotify-app/manage/partials/FollowsSelect.tsx","app/spotify-app/manage/UnfollowFollows.tsx"],"sourcesContent":["import \"./FollowInfo.css\";\n\nimport classNames from \"classnames\";\n\nimport { Follow, RESULTS_TYPE_NAME_SINGULAR_CAP } from \"../../../client/spotify/model\";\nimport DefaultImage from \"./default.png\";\nimport SpotifyLogo from \"./spotify-logo.png\";\n\nexport type FollowStatus = \"selected\" | \"succeeded\" | \"failed\";\n\ninterface FollowProps {\n  follow: Follow;\n  description?: string;\n  status?: FollowStatus;\n  onClick?: () => void;\n}\n\nconst FollowInfo = ({ follow, status, onClick, description }: FollowProps): JSX.Element => (\n  <div\n    className={classNames(\"follow\", status, { clickable: !!onClick })}\n    onClick={(e) => {\n      if (\n        (e.target as any).classList.contains(\"follow-link\") ||\n        (e.target as any).classList.contains(\"spotify-link-logo\")\n      ) {\n        return;\n      }\n      return onClick?.();\n    }}\n  >\n    <div className=\"avatar\">\n      <img src={follow.images[0]?.url ?? DefaultImage} alt={`${follow.name} Avatar`} />\n    </div>\n    <h3 className=\"name\">{follow.name}</h3>\n    <div className=\"type\">{RESULTS_TYPE_NAME_SINGULAR_CAP[follow.type]}</div>\n    <a className=\"follow-link\" href={follow.external_urls.spotify} target=\"_blank\" rel=\"noopener noreferrer\">\n      View on <img className=\"spotify-link-logo\" src={SpotifyLogo} alt=\"Spotify Logo\" />\n    </a>\n    {description && <div className=\"description\">{description}</div>}\n  </div>\n);\n\nexport default FollowInfo;\n","import \"./Input.css\";\n\ninterface InputProps {\n  value: string;\n  placeholder?: string;\n  onChange: (id: string) => void;\n}\n\nconst Input = ({ value, placeholder, onChange }: InputProps): JSX.Element => (\n  <input type=\"text\" placeholder={placeholder} value={value} onChange={(e) => onChange(e.target.value)} />\n);\n\nexport default Input;\n","import ReactSelect from \"react-select\";\n\nimport { isNullOrUndefined } from \"../../../util\";\n\ninterface SelectOption<K, V> {\n  id: K;\n  label: V;\n}\n\nconst isOption = <K, V>(option: unknown): option is SelectOption<K, V> =>\n  typeof option === \"object\" && !isNullOrUndefined(option) && \"id\" in option && \"label\" in option;\n\ninterface SelectProps<K, V> {\n  options: SelectOption<K, V>[];\n  value: K;\n  disabled?: boolean;\n  onChange?: (id: K) => void;\n}\n\nconst Select = <K, V>({ options, value, disabled = false, onChange }: SelectProps<K, V>): JSX.Element => (\n  <ReactSelect\n    styles={{\n      option: (provided, state) => ({\n        ...provided,\n        background: state.isFocused ? \"#282828\" : \"#121212\",\n        color: \"#d8f3e0\",\n      }),\n      control: (provided) => ({\n        ...provided,\n        border: \"1px solid #d8f3e0\",\n        background: \"#121212\",\n        borderRadius: \"0\",\n      }),\n      menu: (provided) => ({\n        ...provided,\n        background: \"#121212\",\n        border: \"1px solid #d8f3e0\",\n      }),\n      singleValue: (provided) => ({\n        ...provided,\n        color: \"#d8f3e0\",\n      }),\n      valueContainer: (provided) => ({\n        ...provided,\n      }),\n    }}\n    captureMenuScroll={false}\n    isDisabled={disabled}\n    value={options.find((option) => option.id === value)}\n    onChange={(option) => isOption(option) && onChange?.(option.id)}\n    options={options}\n  />\n);\n\nexport default Select;\n","import \"./FollowListOptions.css\";\n\nimport { useContext } from \"react\";\n\nimport Input from \"../../partials/input/Input\";\nimport Select from \"../../partials/select/Select\";\nimport { FollowType, PERMISSION_OPTIONS } from \"../../../client/spotify/model\";\nimport { isNullOrUndefined } from \"../../../util\";\nimport AppContext from \"../store/AppContext\";\nimport Checkbox from \"../../partials/checkbox/Checkbox\";\n\nexport enum ViewSize {\n  FIFTY = 50,\n  TWENTY_FIVE = 25,\n  TEN = 10,\n}\n\nconst VIEW_OPTIONS = [\n  { label: ViewSize.TEN, id: ViewSize.TEN },\n  { label: ViewSize.TWENTY_FIVE, id: ViewSize.TWENTY_FIVE },\n  { label: ViewSize.FIFTY, id: ViewSize.FIFTY },\n];\n\ninterface FollowListOptionsProps {\n  followTypes: FollowType[];\n  setFollowTypes?: (...type: FollowType[]) => void;\n  viewSize: ViewSize;\n  setViewSize: (size: ViewSize) => void;\n  filterString?: string;\n  setFilterString?: (filterString: string) => void;\n}\n\nconst FollowListOptions = ({\n  followTypes,\n  setFollowTypes,\n  viewSize,\n  setViewSize,\n  filterString,\n  setFilterString,\n}: FollowListOptionsProps): JSX.Element => {\n  const { permissions } = useContext(AppContext);\n\n  return (\n    <div className=\"follow-list-options\">\n      <h2>Options</h2>\n      <div className=\"type-option\">\n        <span>Types:</span>\n        {PERMISSION_OPTIONS.filter(({ permission }) => permissions.has(permission)).map((option) => (\n          <div key={option.id} className={`option-${option.id}`}>\n            <label>\n              <Checkbox\n                checked={followTypes.includes(option.id)}\n                disabled={followTypes.includes(option.id) && followTypes.length === 1}\n                onChange={(isChecked) =>\n                  isChecked\n                    ? setFollowTypes?.(...new Set([...followTypes, option.id]))\n                    : setFollowTypes?.(...new Set(followTypes.filter((type) => type !== option.id)))\n                }\n              />\n              <span>{option.label}</span>\n            </label>\n          </div>\n        ))}\n      </div>\n      <hr />\n      {!isNullOrUndefined(filterString) && !isNullOrUndefined(setFilterString) ? (\n        <div className=\"filter-option\">\n          <label>\n            <span>Search:</span>\n            <Input value={filterString} onChange={setFilterString} />\n          </label>\n        </div>\n      ) : null}\n      <div className=\"view-option\">\n        <label>\n          <span>Results per page:</span>\n          <Select value={viewSize} onChange={setViewSize} options={VIEW_OPTIONS} />\n        </label>\n      </div>\n      <button\n        className=\"warning\"\n        onClick={() => {\n          setFilterString?.(\"\");\n          setViewSize(ViewSize.TEN);\n        }}\n      >\n        Reset\n      </button>\n    </div>\n  );\n};\n\nexport default FollowListOptions;\n","import \"./FollowList.css\";\n\nimport { useEffect, useState } from \"react\";\n\nimport { Follow, FollowType } from \"../../../../client/spotify/model\";\nimport Loading from \"../../../partials/loading/Loading\";\nimport FollowInfo, { FollowStatus } from \"../../follow/FollowInfo\";\nimport FollowListOptions, { ViewSize } from \"../../list-options/FollowListOptions\";\nimport { FetchError } from \"../../../../util/retry-fetch\";\n\ninterface FollowWithStatus {\n  follow: Follow;\n  status: FollowStatus;\n}\n\ninterface FollowWithError extends FollowWithStatus {\n  status: \"failed\";\n  error: FetchError;\n}\n\nconst isFollowWithError = (follow: FollowWithStatus | FollowWithError): follow is FollowWithError =>\n  follow.status === \"failed\";\n\ninterface FollowListProps {\n  followTypes: FollowType[];\n  follows: FollowWithStatus[] | FollowWithError[];\n  unfollowing: boolean;\n  completed: boolean;\n  header: JSX.Element;\n}\n\nconst FollowList = ({ followTypes, follows, unfollowing, completed, header }: FollowListProps): JSX.Element => {\n  const [viewSize, setViewSize] = useState(ViewSize.TEN);\n  const [pageIndex, setPageIndex] = useState(0);\n\n  useEffect(() => {\n    setPageIndex(0);\n  }, [viewSize]);\n\n  useEffect(() => {\n    if (!completed) {\n      return;\n    }\n\n    setPageIndex(0);\n  }, [completed]);\n\n  const failedFollows = follows.filter((follow) => follow.status === \"failed\");\n\n  const followsToShow = completed && failedFollows.length > 0 ? failedFollows : follows;\n\n  return (\n    <div className=\"unfollow-follows-list\">\n      <div className=\"results-table\">\n        <div className=\"results-table-options\">\n          <FollowListOptions {...{ followTypes, viewSize, setViewSize }} />\n        </div>\n        <div className=\"results-view\">\n          {header}\n          {unfollowing && <Loading />}\n          <div className=\"follow-list\">\n            {followsToShow.slice(pageIndex * viewSize, (pageIndex + 1) * viewSize).map((details) => (\n              <FollowInfo\n                key={details.follow.id}\n                status={details.status}\n                follow={details.follow}\n                description={\n                  isFollowWithError(details) ? `Could not unfollow. Error: ${details.error.message}` : undefined\n                }\n              />\n            ))}\n          </div>\n          <div className=\"pagination\">\n            <button\n              className=\"previous\"\n              onClick={() => setPageIndex((pageIndex) => pageIndex - 1)}\n              disabled={pageIndex === 0}\n            >\n              Previous\n            </button>\n            <button\n              className=\"next\"\n              onClick={() => setPageIndex((pageIndex) => pageIndex + 1)}\n              disabled={(pageIndex + 1) * viewSize >= follows.length - 1}\n            >\n              Next\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default FollowList;\n","import \"./UnfollowAll.css\";\n\nimport { useCallback, useEffect, useState } from \"react\";\n\nimport { useUnfollowFollowsChunked } from \"../../../client/spotify\";\nimport {\n  RESULTS_TYPE_NAME_LC,\n  Follow,\n  FollowType,\n  getFollowTypeText,\n  UnfollowChunkedResult,\n  isChunkedSuccessResult,\n} from \"../../../client/spotify/model\";\nimport { FollowStatus } from \"../follow/FollowInfo\";\nimport FollowList from \"./partials/FollowList\";\nimport { FetchError } from \"../../../util/retry-fetch\";\n\ninterface UnfollowAllProps {\n  followTypes: FollowType[];\n  follows: Follow[];\n  onComplete: () => void;\n}\n\ntype FollowWithError = { follow: Follow; error: FetchError };\n\nconst getInProgressFollow = (follow: Follow) => ({\n  follow,\n  status: \"selected\" as FollowStatus,\n});\nconst getSucceededFollow = (follow: Follow) => ({\n  follow,\n  status: \"succeeded\" as FollowStatus,\n});\nconst getFailedFollow = (follow: FollowWithError) => ({\n  ...follow,\n  status: \"failed\" as FollowStatus,\n});\n\nconst UnfollowAll = ({ followTypes, follows, onComplete }: UnfollowAllProps) => {\n  const [failedFollows, setFailedFollows] = useState<FollowWithError[]>([]);\n  const [succeededFollows, setSucceededFollows] = useState<Follow[]>([]);\n\n  const newUnfollowsHandler = useCallback(\n    (newUnfollows: UnfollowChunkedResult<Follow>) => {\n      if (isChunkedSuccessResult(newUnfollows)) {\n        setSucceededFollows((succeededFollows) => [...succeededFollows, ...newUnfollows.succeeded]);\n      } else {\n        setFailedFollows((failedFollows) => [\n          ...failedFollows,\n          ...newUnfollows.failed.map((follow) => ({ follow, error: newUnfollows.error })),\n        ]);\n      }\n    },\n    [setSucceededFollows, setFailedFollows],\n  );\n\n  const [resultsChunked, loading, errors] = useUnfollowFollowsChunked(follows, newUnfollowsHandler);\n\n  useEffect(() => {\n    const totalAttemptedFollows = failedFollows.length + succeededFollows.length;\n    if (errors.length === 0 && !loading && !!resultsChunked && totalAttemptedFollows === follows.length) {\n      onComplete();\n    }\n  }, [errors, loading, resultsChunked, onComplete, failedFollows, succeededFollows, follows]);\n\n  return (\n    <div className=\"unfollow-all-list\">\n      <FollowList\n        followTypes={followTypes}\n        follows={[\n          ...failedFollows.map(getFailedFollow),\n          ...follows\n            .filter((Follow) => !failedFollows.find((failedFollow) => failedFollow.follow.id === Follow.id))\n            .filter((Follow) => succeededFollows.indexOf(Follow) === -1)\n            .map(getInProgressFollow),\n          ...succeededFollows.map(getSucceededFollow),\n        ]}\n        unfollowing={errors.length === 0 && loading}\n        completed={errors.length === 0 && !loading && !!resultsChunked}\n        header={\n          <>\n            {errors.length > 0 && (\n              <div className=\"error loading-message\">\n                Error unfollowing {getFollowTypeText(RESULTS_TYPE_NAME_LC, ...followTypes)}:\n                <ul>\n                  {errors.map((error, i) => (\n                    <li key={i}>{error.message}</li>\n                  ))}\n                </ul>\n              </div>\n            )}\n            {errors.length === 0 && loading && (\n              <div className=\"warning loading-message\">\n                Unfollowing {getFollowTypeText(RESULTS_TYPE_NAME_LC, ...followTypes)}\n              </div>\n            )}\n            {errors.length === 0 && !loading && resultsChunked.length > 0 && failedFollows.length === 0 && (\n              <div className=\"success loading-message\">\n                Unfollowed all {getFollowTypeText(RESULTS_TYPE_NAME_LC, ...followTypes)}!\n              </div>\n            )}\n            {errors.length === 0 && !loading && resultsChunked.length > 0 && failedFollows.length > 0 && (\n              <div className=\"error loading-message\">\n                Could not unfollow some {getFollowTypeText(RESULTS_TYPE_NAME_LC, ...followTypes)}! Failed{\" \"}\n                {getFollowTypeText(RESULTS_TYPE_NAME_LC, ...followTypes)} listed below\n              </div>\n            )}\n          </>\n        }\n      />\n    </div>\n  );\n};\n\nexport default UnfollowAll;\n","import \"./FollowsRemove.css\";\n\nimport { useState } from \"react\";\n\nimport { Follow, FollowType, getFollowTypeText } from \"../../../../client/spotify/model\";\nimport UnfollowAll from \"../../unfollow-all/UnfollowAll\";\nimport { RESULTS_TYPE_NAME_LC } from \"../../../../client/spotify/model\";\n\ninterface ArtistsRemoveProps {\n  followTypes: FollowType[];\n  follows: Follow[];\n  restartUnfollow: () => void;\n}\n\nconst ArtistsRemove = ({ followTypes, follows, restartUnfollow }: ArtistsRemoveProps): JSX.Element => {\n  const [allowRestart, setAllowRestart] = useState(false);\n\n  return (\n    <div className=\"follows-remove\">\n      <UnfollowAll followTypes={followTypes} follows={follows} onComplete={() => setAllowRestart(true)} />\n      {allowRestart && (\n        <div className=\"restart-unfollow\">\n          <button className=\"info\" disabled={!allowRestart} onClick={restartUnfollow}>\n            Unfollow more {getFollowTypeText(RESULTS_TYPE_NAME_LC, ...followTypes)}\n          </button>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default ArtistsRemove;\n","import \"./ListLegend.css\";\n\nconst ListLegend = (): JSX.Element => (\n  <div className=\"list-legend\">\n    <div className=\"item normal\">\n      <div className=\"color\"></div>\n      <div className=\"text\">Not Selected</div>\n    </div>\n    <div className=\"item selected\">\n      <div className=\"color\"></div>\n      <div className=\"text\">Selected</div>\n    </div>\n  </div>\n);\n\nexport default ListLegend;\n","import \"./FollowList.css\";\n\nimport { useEffect, useState } from \"react\";\n\nimport { RESULTS_TYPE_NAME_LC, Follow, FollowType, getFollowTypeText } from \"../../../../client/spotify/model\";\nimport Loading from \"../../../partials/loading/Loading\";\nimport FollowInfo from \"../../follow/FollowInfo\";\nimport FollowListOptions, { ViewSize } from \"../../list-options/FollowListOptions\";\nimport ListLegend from \"./ListLegend\";\n\ninterface FollowListProps {\n  loading: boolean;\n  followTypes: FollowType[];\n  follows: Follow[];\n  selectedFollows: Follow[];\n  setFollowTypes: (...type: FollowType[]) => void;\n  addFollow: (followToAdd: Follow) => void;\n  removeFollow: (followToRemove: Follow) => void;\n}\n\nconst FollowList = ({\n  loading,\n  followTypes,\n  follows,\n  selectedFollows,\n  setFollowTypes,\n  addFollow,\n  removeFollow,\n}: FollowListProps): JSX.Element => {\n  const [viewSize, setViewSize] = useState(ViewSize.TEN);\n  const [filterString, setFilterString] = useState(\"\");\n  const [pageIndex, setPageIndex] = useState(0);\n\n  useEffect(() => {\n    setPageIndex(0);\n  }, [viewSize, filterString]);\n\n  const filterStringLc = filterString.toLowerCase();\n\n  return (\n    <div className=\"all-follows-list\">\n      <div className=\"results-table\">\n        <div className=\"results-table-options\">\n          <FollowListOptions\n            {...{ followTypes, setFollowTypes, viewSize, setViewSize, filterString, setFilterString }}\n          />\n        </div>\n        <div className=\"results-view\">\n          <h2 className=\"list-title\">Select {getFollowTypeText(RESULTS_TYPE_NAME_LC, ...followTypes)} to unfollow</h2>\n          <ListLegend />\n          {loading && (\n            <>\n              <div className=\"warning loading-message\">\n                Retrieving followed {getFollowTypeText(RESULTS_TYPE_NAME_LC, ...followTypes)}\n              </div>\n              <Loading />\n            </>\n          )}\n          <div className=\"artist-list\">\n            {!loading && follows.length === 0 && (\n              <div className=\"error loading-message\">\n                No followed {getFollowTypeText(RESULTS_TYPE_NAME_LC, ...followTypes)} found\n              </div>\n            )}\n            {follows\n              .filter((follow) => filterStringLc === \"\" || follow.name.toLowerCase().includes(filterStringLc))\n              .slice(pageIndex * viewSize, (pageIndex + 1) * viewSize)\n              .map((follow) => {\n                const isSelected = selectedFollows.indexOf(follow) !== -1;\n                return (\n                  <FollowInfo\n                    key={follow.id}\n                    status={isSelected ? \"selected\" : undefined}\n                    follow={follow}\n                    onClick={() => (isSelected ? removeFollow(follow) : addFollow(follow))}\n                  />\n                );\n              })}\n          </div>\n          <div className=\"pagination\">\n            <button\n              className=\"previous\"\n              onClick={() => setPageIndex((pageIndex) => pageIndex - 1)}\n              disabled={pageIndex === 0}\n            >\n              Previous\n            </button>\n            <button\n              className=\"next\"\n              onClick={() => setPageIndex((pageIndex) => pageIndex + 1)}\n              disabled={(pageIndex + 1) * viewSize >= follows.length - 1}\n            >\n              Next\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default FollowList;\n","import \"./AllFollows.css\";\n\nimport { useGetAllUserArtistFollows } from \"../../../client/spotify\";\nimport { RESULTS_TYPE_NAME_LC, Follow, FollowType, getFollowTypeText } from \"../../../client/spotify/model\";\nimport FollowList from \"./partials/FollowList\";\n\ninterface AllFollowsProps {\n  followTypes: FollowType[];\n  selectedFollows: Follow[];\n  setFollowTypes: (...types: FollowType[]) => void;\n  addFollowsForRemoval: (...follows: Follow[]) => void;\n  removeFollowsFromRemoval: (...follows: Follow[]) => void;\n}\n\nconst AllFollows = ({\n  followTypes,\n  setFollowTypes,\n  selectedFollows,\n  addFollowsForRemoval,\n  removeFollowsFromRemoval,\n}: AllFollowsProps): JSX.Element => {\n  const [follows, loading, errors] = useGetAllUserArtistFollows(followTypes, addFollowsForRemoval);\n\n  const addFollowToRemovalList = (follow: Follow) => {\n    addFollowsForRemoval(follow);\n  };\n  const removeFollowFromRemovalList = (follow: Follow) => {\n    removeFollowsFromRemoval(follow);\n  };\n\n  return (\n    <div className=\"all-follows\">\n      {errors.length > 0 && (\n        <div className=\"error loading-message\">\n          Error retrieving followed {getFollowTypeText(RESULTS_TYPE_NAME_LC, ...followTypes)}:\n          <ul>\n            {errors.map((error, i) => (\n              <li key={i}>{error.message}</li>\n            ))}\n          </ul>\n        </div>\n      )}\n      {\n        <FollowList\n          loading={loading}\n          followTypes={followTypes}\n          setFollowTypes={setFollowTypes}\n          follows={follows}\n          selectedFollows={selectedFollows}\n          addFollow={addFollowToRemovalList}\n          removeFollow={removeFollowFromRemovalList}\n        />\n      }\n    </div>\n  );\n};\n\nexport default AllFollows;\n","import \"./FollowsSelect.css\";\n\nimport classNames from \"classnames\";\n\nimport { RESULTS_TYPE_NAME_LC, Follow, FollowType, getFollowTypeText } from \"../../../../client/spotify/model\";\nimport AllFollows from \"../../all-follows/AllFollows\";\n\ninterface FollowsSelectProps {\n  followTypes: FollowType[];\n  selectedFollows: Follow[];\n  setFollowTypes: (...types: FollowType[]) => void;\n  addFollows: (...follows: Follow[]) => void;\n  removeFollows: (...follows: Follow[]) => void;\n  startUnfollow: () => void;\n}\n\nconst FollowsSelect = ({\n  followTypes,\n  setFollowTypes,\n  selectedFollows,\n  addFollows,\n  removeFollows,\n  startUnfollow,\n}: FollowsSelectProps): JSX.Element => (\n  <div className=\"follows-select\">\n    <AllFollows\n      followTypes={followTypes}\n      setFollowTypes={setFollowTypes}\n      selectedFollows={selectedFollows}\n      addFollowsForRemoval={addFollows}\n      removeFollowsFromRemoval={removeFollows}\n    />\n    <div className=\"start-unfollow\">\n      <button\n        className={classNames(\"error\", {\n          disabled: selectedFollows.length === 0,\n        })}\n        disabled={selectedFollows.length === 0}\n        onClick={startUnfollow}\n      >\n        Unfollow {selectedFollows.length} {getFollowTypeText(RESULTS_TYPE_NAME_LC, ...followTypes)}\n      </button>\n    </div>\n  </div>\n);\n\nexport default FollowsSelect;\n","import \"./UnfollowFollows.css\";\n\nimport { useCallback, useContext, useEffect, useMemo, useState } from \"react\";\n\nimport { FollowType, Follow, getResultTypesForFollowTypes, PERMISSION_OPTIONS } from \"../../../client/spotify/model\";\nimport FollowsRemove from \"./partials/FollowsRemove\";\nimport FollowsSelect from \"./partials/FollowsSelect\";\nimport AppContext from \"../store/AppContext\";\n\n// import Loading from \"../../partials/loading/Loading\";\nenum UnfollowView {\n  SELECT = \"select\",\n  REMOVE = \"remove\",\n}\n\nconst UnfollowFollows = (): JSX.Element => {\n  const { permissions } = useContext(AppContext);\n  const [followTypes, setFollowTypes] = useState(\n    new Set<FollowType>(\n      [...permissions]\n        .map((permission) => PERMISSION_OPTIONS.find((option) => option.permission === permission)!)\n        .map((option) => option?.id),\n    ),\n  );\n  const [view, setView] = useState(UnfollowView.SELECT);\n  const [followsToRemove, setFollowsToRemove] = useState(new Set<Follow>());\n\n  const followTypeList = useMemo(() => [...followTypes], [followTypes]);\n\n  useEffect(() => {\n    setFollowsToRemove((follows) => {\n      [...follows]\n        .filter((follow) => !getResultTypesForFollowTypes(...followTypes).includes(follow.type))\n        .forEach((follow) => follows.delete(follow));\n      return new Set(follows);\n    });\n  }, [followTypes, setFollowsToRemove]);\n\n  const updateFollowTypes = useCallback(\n    (...followTypes: FollowType[]) => {\n      setFollowTypes(new Set(followTypes));\n    },\n    [setFollowTypes],\n  );\n  const addFollows = useCallback(\n    (...followsToAdd: Follow[]) =>\n      setFollowsToRemove((follows) => {\n        followsToAdd.forEach((follow) => follows.add(follow));\n        return new Set(follows);\n      }),\n    [setFollowsToRemove],\n  );\n  const removeFollows = useCallback(\n    (...followsToRemove: Follow[]) =>\n      setFollowsToRemove((follows) => {\n        followsToRemove.forEach((follow) => follows.delete(follow));\n        return new Set(follows);\n      }),\n    [setFollowsToRemove],\n  );\n\n  return (\n    <div className=\"unfollow-follows\">\n      {view === UnfollowView.SELECT ? (\n        <FollowsSelect\n          followTypes={followTypeList}\n          setFollowTypes={updateFollowTypes}\n          selectedFollows={[...followsToRemove]}\n          addFollows={addFollows}\n          removeFollows={removeFollows}\n          startUnfollow={() => setView(UnfollowView.REMOVE)}\n        />\n      ) : (\n        <FollowsRemove\n          followTypes={followTypeList}\n          follows={[...followsToRemove]}\n          restartUnfollow={() => {\n            setFollowsToRemove(new Set());\n            setView(UnfollowView.SELECT);\n          }}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default UnfollowFollows;\n"],"names":["_ref","_follow$images$0$url","_follow$images$","follow","status","onClick","description","_jsxs","className","classNames","clickable","e","target","classList","contains","children","_jsx","src","images","url","DefaultImage","alt","concat","name","RESULTS_TYPE_NAME_SINGULAR_CAP","type","href","external_urls","spotify","rel","SpotifyLogo","value","placeholder","onChange","options","_ref$disabled","disabled","ReactSelect","styles","option","provided","state","_objectSpread","background","isFocused","color","control","border","borderRadius","menu","singleValue","valueContainer","captureMenuScroll","isDisabled","find","id","isNullOrUndefined","isOption","ViewSize","VIEW_OPTIONS","label","TEN","TWENTY_FIVE","FIFTY","followTypes","setFollowTypes","viewSize","setViewSize","filterString","setFilterString","permissions","useContext","AppContext","PERMISSION_OPTIONS","_ref2","permission","has","map","Checkbox","checked","includes","length","isChecked","apply","_toConsumableArray","Set","filter","Input","Select","follows","unfollowing","completed","header","_useState","useState","_useState2","_slicedToArray","_useState3","_useState4","pageIndex","setPageIndex","useEffect","failedFollows","followsToShow","FollowListOptions","Loading","slice","details","FollowInfo","error","message","undefined","getInProgressFollow","getSucceededFollow","getFailedFollow","onComplete","setFailedFollows","succeededFollows","setSucceededFollows","newUnfollowsHandler","useCallback","newUnfollows","isChunkedSuccessResult","succeeded","failed","_useUnfollowFollowsCh","useUnfollowFollowsChunked","_useUnfollowFollowsCh2","resultsChunked","loading","errors","totalAttemptedFollows","FollowList","Follow","failedFollow","indexOf","_Fragment","getFollowTypeText","RESULTS_TYPE_NAME_LC","i","restartUnfollow","allowRestart","setAllowRestart","UnfollowAll","selectedFollows","addFollow","removeFollow","_useState5","_useState6","filterStringLc","toLowerCase","ListLegend","isSelected","addFollowsForRemoval","removeFollowsFromRemoval","_useGetAllUserArtistF","useGetAllUserArtistFollows","_useGetAllUserArtistF2","addFollows","removeFollows","startUnfollow","AllFollows","UnfollowView","SELECT","view","setView","followsToRemove","setFollowsToRemove","followTypeList","useMemo","getResultTypesForFollowTypes","forEach","delete","updateFollowTypes","_len","arguments","Array","_key","_len2","followsToAdd","_key2","add","_len3","_key3","FollowsSelect","REMOVE","FollowsRemove"],"sourceRoot":""}