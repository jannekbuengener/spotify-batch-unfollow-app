{"version":3,"file":"static/js/320.999e9101.chunk.js","mappings":"qOAQA,EANuB,WACrB,OAAqBA,EAAAA,EAAAA,WAAS,GAArBC,GAAT,eAEA,OAAOC,EAAAA,EAAAA,cAAY,kBAAMD,GAAS,SAACE,GAAD,OAAeA,CAAf,GAAf,GAAyC,GAC7D,E,kBCWD,EARc,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAAH,OACZ,gBAAKC,UAAU,QAAf,UACE,mBAAQA,UAAU,UAAUD,QAASA,EAArC,iCAFU,ECARE,GAAWC,EAAAA,EAAAA,OAAK,kBAAM,6DAAN,IAChBC,GAAkBD,EAAAA,EAAAA,OAAK,kBAAM,qEAAN,IACvBE,GAASF,EAAAA,EAAAA,OAAK,kBAAM,6BAAN,IA8BpB,EA5BmB,WACjB,OAAoCG,EAAAA,EAAAA,IAAe,CACjDC,aAAc,yCACdC,MAAO,CAAC,mBAAoB,sBAC5BC,SChBqCC,mCDiBrCC,YAAaC,SAASC,SAASC,KAAKC,QAAQ,MAAO,IAAM,cAJ3D,eAAOC,EAAP,KAAcC,EAAd,KAAwBC,EAAxB,KAMMC,EAAcC,IAQpB,OAPAC,EAAAA,GAAAA,WAA2B,kBAAMH,EAAS,GAAf,GAE3BI,EAAAA,EAAAA,YAAU,WACRD,EAAAA,GAAAA,UAA4BL,QAAgBO,EAC5CJ,GACD,GAAE,CAACH,EAAOG,IAEHH,GAGN,UAAC,EAAAQ,SAAD,CAAUC,UAAU,SAACC,EAAA,EAAD,IAApB,WACE,SAACxB,EAAD,KACA,UAAC,EAAAsB,SAAD,CAAUC,UAAU,SAACC,EAAA,EAAD,IAApB,WACE,SAACtB,EAAD,KACA,SAACC,EAAD,WANJ,SAAC,EAAD,CAAOL,QAASiB,GAUnB,C,wGEvCYU,EAA0B,6BAC1BC,EAAqB,GAE5BP,EAAgB,gEACbQ,eAAgCN,EADnB,KAEbO,WAAyB,WAAQ,CAFpB,IAAG,IAKzB,M","sources":["util/use-force-update.ts","app/spotify-app/login/Login.tsx","app/spotify-app/SpotifyApp.tsx","constants.ts","client/spotify/api/config.ts"],"sourcesContent":["import { useCallback, useState } from \"react\";\n\nconst useForceupdate = () => {\n  const [, setState] = useState(true);\n\n  return useCallback(() => setState((oldState) => !oldState), []);\n};\n\nexport default useForceupdate;\n","import \"./Login.css\";\n\nimport React from \"react\";\nimport { getToken } from \"react-oauth2-hook\";\n\ninterface LoginProps {\n  onClick: getToken;\n}\n\nconst Login = ({ onClick }: LoginProps): JSX.Element => (\n  <div className=\"login\">\n    <button className=\"success\" onClick={onClick}>\n      Login with Spotify\n    </button>\n  </div>\n);\n\nexport default Login;\n","import React, { lazy, Suspense, useEffect } from \"react\";\nimport { useOAuth2Token } from \"react-oauth2-hook\";\n\nimport SpotifyConfig from \"../../client/spotify/api/config\";\nimport { SPOTIFY_CLIENT_ID } from \"../../constants\";\nimport useForceUpdate from \"../../util/use-force-update\";\nimport Loading from \"../partials/loading/Loading\";\nimport Login from \"./login/Login\";\n\nconst UserInfo = lazy(() => import(\"./user/UserInfo\"));\nconst UnfollowArtists = lazy(() => import(\"./manage/UnfollowArtists\"));\nconst Logout = lazy(() => import(\"./logout/Logout\"));\n\nconst SpotifyApp = (): JSX.Element => {\n  const [token, getToken, setToken] = useOAuth2Token({\n    authorizeUrl: \"https://accounts.spotify.com/authorize\",\n    scope: [\"user-follow-read\", \"user-follow-modify\"],\n    clientID: SPOTIFY_CLIENT_ID,\n    redirectUri: document.location.href.replace(/\\/$/, \"\") + \"/callback\",\n  });\n  const forceUpdate = useForceUpdate();\n  SpotifyConfig.resetToken = () => setToken(\"\");\n\n  useEffect(() => {\n    SpotifyConfig.userToken = !!token ? token : undefined;\n    forceUpdate();\n  }, [token, forceUpdate]);\n\n  return !token ? (\n    <Login onClick={getToken} />\n  ) : (\n    <Suspense fallback={<Loading />}>\n      <UserInfo />\n      <Suspense fallback={<Loading />}>\n        <UnfollowArtists />\n        <Logout />\n      </Suspense>\n    </Suspense>\n  );\n};\n\nexport default SpotifyApp;\n","export const SPOTIFY_AUTH_DOMAIN: string = \"accounts.spotify.com\";\nexport const SPOTIFY_CLIENT_ID: string = process.env.REACT_APP_CLIENT_ID || \"\";\n","export const SPOTIFY_API_URL: string = \"https://api.spotify.com/v1\";\nexport const BATCH_SIZE: number = 50;\n\nconst SpotifyConfig = new (class {\n  public userToken: string | undefined = undefined;\n  public resetToken: () => void = () => {};\n})();\n\nexport default SpotifyConfig;\n"],"names":["useState","setState","useCallback","oldState","onClick","className","UserInfo","lazy","UnfollowArtists","Logout","useOAuth2Token","authorizeUrl","scope","clientID","process","redirectUri","document","location","href","replace","token","getToken","setToken","forceUpdate","useForceUpdate","SpotifyConfig","useEffect","undefined","Suspense","fallback","Loading","SPOTIFY_API_URL","BATCH_SIZE","userToken","resetToken"],"sourceRoot":""}